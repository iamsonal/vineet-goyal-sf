# Environment configuration
# =========================

env_default: &env_default
  working_directory: ~/lds-lp
  docker:
    - image: circleci/node:14-browsers
  resource_class: medium+

env_perf: &env_perf
  <<: *env_default
  environment:
    - GIT_APP_CERT_PATH: ~/lds-lp/git_app.pem

# Commands definitions
# ====================

# Yarn cache
restore_yarn_cache: &restore_yarn_cache
  restore_cache:
    keys:
      - yarn-v4-{{ checksum "yarn.lock" }}

save_yarn_cache: &save_yarn_cache
  save_cache:
    key: yarn-v4-{{ checksum "yarn.lock" }}
    paths:
      - ~/.cache/yarn

# Workspace
save_workspace: &save_workspace
  persist_to_workspace:
    root: .
    paths: .

load_workspace: &load_workspace
  attach_workspace:
    at: ~/lds-lp

# Build
install: &install
  run:
    name: Install dependencies
    command: yarn install --frozen-lockfile

# Checks
run_format: &run_format
  run:
    name: Run format
    command: yarn format:check

run_linting: &run_linting
  run:
    name: Run linting
    command: yarn lint

# Test
run_unit_tests: &run_unit_tests
  run:
    name: Run unit tests with coverage
    # Jest should run sequentially instead of parallel on the CI to avoid running out of memory and
    # reduce run duration.
    # https://jestjs.io/docs/en/troubleshooting#tests-are-extremely-slow-on-docker-and-or-continuous-integration-ci-server
    command: yarn test:unit:coverage --runInBand --ci

run_integration_tests: &run_integration_tests
  run:
    name: Run integration tests
    command: yarn test:integration

run_integration_tests_compat: &run_integration_tests_compat
  run:
    name: Run integration tests (compat)
    command: yarn test:integration:compat

run_mobile_tests: &run_mobile_tests
  run:
    name: Run LDS on Mobile integration tests
    command: yarn test:mobile

# Sauce Labs
setup_sauce_env_variables: &setup_sauce_env_variables
  run:
    name: Setup sauce connect environnement variables
    command: echo 'export SAUCE_TUNNEL_ID="lds-${CIRCLE_BUILD_NUM}"' >> $BASH_ENV

setup_mobile_sauce_env_variables: &setup_mobile_sauce_env_variables
  run:
    name: Setup sauce environnement variables for mobile
    command: echo '
      export ANDROID_TEST_APK_NAME="lds-android-hybrid-test-app-$(echo $CIRCLE_BRANCH | sed -e 's/[^A-Za-z0-9._-]/_/g').apk"
      export SAUCE_USERNAME=${SAUCE_USERNAME_NATIVE}
      export SAUCE_KEY=${SAUCE_KEY_NATIVE}' >> $BASH_ENV

start_sauce_connect: &start_sauce_connect
  run:
    name: Install and start sauce connect
    background: true
    command: |
      curl https://saucelabs.com/downloads/sc-4.6.2-linux.tar.gz -o saucelabs.tar.gz
      tar -xzf saucelabs.tar.gz
      cd sc-*
      bin/sc -u ${SAUCE_USERNAME} -k ${SAUCE_KEY} -i ${SAUCE_TUNNEL_ID} --tunnel-domains tunnelhost -P 4445

wait_for_sauce_connect: &wait_for_sauce_connect
  run:
    name: Wait for sauce connect to be up
    command: wget --retry-connrefused --no-check-certificate -T 60 localhost:4445

stop_sauce_connect: &stop_sauce_connect
  run:
    name: Stop sauce connect
    command: kill -9 `cat /tmp/sc_client-${SAUCE_TUNNEL_ID}.pid`

add_tunnelhost_hosts_entry: &add_tunnelhost_hosts_entry
  run:
    name: add tunnelhost entry to hosts file
    command: echo 127.0.0.1 tunnelhost | sudo tee -a /etc/hosts

upload_test_mobile_apps_to_sauce: &upload_test_mobile_apps_to_sauce
  run:
    name: Upload LDS Android Hybrid Test App to sauce files
    command: |
      curl -v -u ${SAUCE_USERNAME}:${SAUCE_KEY} POST https://saucelabs.com/rest/v1/storage/${SAUCE_USERNAME}/${ANDROID_TEST_APK_NAME}?overwrite=true -H 'Content-Type: application/octet-stream' --data-binary @packages/lds-karma/utils/webview/lds-android-hybrid-test-app.apk

# Best
setup_best_environment: &setup_best_environment
  run:
    name: Setup BEST environment
    command: echo '
      export PULL_REQUEST=${CIRCLE_PULL_REQUEST}
      export REPO_NAME=${CIRCLE_PROJECT_REPONAME}
      export TARGET_COMMIT=${CIRCLE_SHA1}
      export BASE_COMMIT=`git rev-parse origin/master`' >> $BASH_ENV

      echo -e "$GIT_APP_CERT" | base64 -d >> ~/lds-lp/git_app.pem

run_best: &run_best
  run:
    name: Run performance Test
    command: yarn test:perf --externalStorage=@best/store-aws --runner remote --dbAdapter=sql/postgres --dbURI=${BEST_HUB_DATABASE_URL}

compare_best_results: &compare_best_results
  run:
    name: Comparing perf examples
    command: yarn test:perf --compareStats ${BASE_COMMIT} ${TARGET_COMMIT} --externalStorage=@best/store-aws --gitIntegration

store_best_artifacts: &store_best_artifacts
  store_artifacts:
    path: ~/lds-lp/__benchmark_results__/
    destination: benchmarks

test_size: &test_size
  run:
    name: Run bundle size check
    command: yarn test:size

test_memory: &test_memory
  run:
    name: Run memory perf test
    command: yarn test:memory

# Jobs definition
# ===============

version: 2
jobs:
  build_and_test:
    <<: *env_default
    steps:
      - checkout

      - *restore_yarn_cache
      - *install
      - *save_yarn_cache

      - *save_workspace

      - *run_linting
      - *run_format

      - *run_unit_tests

  test_integration:
    <<: *env_default
    steps:
      - *load_workspace

      - *setup_sauce_env_variables
      - *start_sauce_connect
      - *wait_for_sauce_connect

      - *run_integration_tests
      - *run_integration_tests_compat

      - *stop_sauce_connect

  test_mobile:
    <<: *env_default
    steps:
      - *load_workspace

      - *add_tunnelhost_hosts_entry

      - *setup_sauce_env_variables
      - *setup_mobile_sauce_env_variables
      - *start_sauce_connect
      - *wait_for_sauce_connect

      - *upload_test_mobile_apps_to_sauce

      - *run_mobile_tests

      - *stop_sauce_connect

  perf_and_compare:
    <<: *env_perf
    steps:
      - *load_workspace

      - *test_size
      - *test_memory

      - *setup_best_environment
      - *run_best
      - *compare_best_results
      - *store_best_artifacts

# Workflows definition
# ====================

workflows:
  version: 2
  build_and_test:
    jobs:
      - build_and_test
      - test_integration:
          requires:
            - build_and_test
      - test_mobile:
          requires:
            - build_and_test
#      - perf_and_compare:
#          requires:
#            - build_and_test
