#%RAML 1.0
# This RAML has been modified and "ELT Foundation - Analytics" is responsible for maintaing it
securedBy:
  - OAuth2
title: Salesforce Connect API
version: '51.0'
mediaType: application/json
protocols:
  - https
baseUri: /services/data/v51.0
securitySchemes:
  OAuth2:
    type: OAuth 2.0
    settings:
      authorizationUri: https://example.com/oauth/authorize
      accessTokenUri: ''
      authorizationGrants:
        - implicit
annotationTypes:
  oas-readOnly:
    type: boolean
    allowedTargets: TypeDeclaration
  oas-collectionFormat:
    type: string
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
types:
  AbstractDataflowNodeInputRepresentation:
    description: Wave Dataflow node input representation
    discriminator: name # TODO Hand rolled
    type: object
    properties:
      name: # TODO Hand rolled
        description: name
        type: string
      sources:
        description: Dataflow node sources.
        type: array
        items:
          type: string
  AbstractDataflowNodeRepresentation:
    description: A Wave dataflow node.
    discriminator: action
    type: object
    properties:
      action:
        description: Node action
        type: string
      sources:
        description: Node sources
        type: array
        items:
          type: string
  AbstractDigestParamsInputRepresentation:
    description: Digest-related nodes parameters input representation
    discriminator: object # TODO Hand rolled
    type: AbstractParamInputRepresentation
    properties:
      fields:
        description: Fields
        type: array
        items:
          type: object
      object:
        description: Object to digest
        type: string
  AbstractDigestParamsRepresentation:
    description: A Wave dataflow digest node params.
    discriminator: object # TODO Hand rolled
    type: AbstractParamRepresentation
    properties:
      fields:
        description: Fields
        type: array
        items:
          type: AddedFieldRepresentation
      object:
        description: Object to digest
        type: string
  AbstractFieldRepresentation:
    description: Base represenation for fields in Wave.
    discriminator: fieldType
    type: object
    properties:
      defaultValue:
        description: An optional default value.
        type: object
      description:
        description: A long-form description of the field.
        type: string
      fieldType:
        description: The type of the field.
        type: string
        enum:
          - Date
          - DateOnly
          - DateTime
          - Numeric
          - Text
      format:
        description: For dates, the format string is used to parse the input value;
          for other field types, the format string is used for display.
        type: string
      label:
        description: A user-friendly label for the field.
        type: string
      multiValue:
        description: Indicates if the field is mulit-value or not (default false).
        type: boolean
      multiValueSeparator:
        description: The value separator, used only if this is a multi-value field.
        type: string
      name:
        description: The field's developer name.
        type: string
      precision:
        description: The numeric precision or text length depending on field type.
        type: integer
      scale:
        description: The numeric scale.
        type: integer
      systemField:
        description: Indicates if the field is a system field (default false). System
          fields are not queryable.
        type: boolean
      uniqueId:
        description: Indicates if the field is a unique ID for the data set (default
          false). There can be only one unique ID for any dataset.
        type: boolean
  AbstractParamInputRepresentation:
    description: Wave Dataflow node runtime parameters input representation
    discriminator: name # TODO Hand rolled
    type: object
    properties:
      name: # TODO Hand rolled
        description: name
        type: string
      runtime:
        description: Runtime parameters.
        type: object
        properties:
          //:
            type: object
  AbstractParamRepresentation:
    description: A Wave dataflow node params.
    discriminator: name # TODO Hand rolled
    type: object
    properties:
      name: # TODO Hand rolled
        description: name
        type: string
      dateSyntax:
        description: Node date syntax version
        type: string
      runtime:
        description: Node runtime parameters
        type: object
        properties:
          //:
            type: object
      timezone:
        description: Node timezone context
        type: string
  AbstractRecipePreviewRepresentation:
    description: This represents the base representation for all recipe preview API
      output.
    discriminator: id # TODO Hand rolled
    type: object
    properties:
      id:
        description: Client generated unique id to track the preview being generated.
        type: string
  ActionCollectionRepresentation:
    description: Wave action collection representation.
    type: object
    properties:
      actions:
        description: Get all Actions
        type: array
        items:
          type: ActionRepresentation
  ActionRepresentation:
    description: Wave action representation.
    type: object
    properties:
      apiName:
        description: api name
        type: string
      iconUrl:
        description: icon Url
        type: string
      label:
        description: label
        type: string
      primaryColor:
        description: primary color
        type: string
      subType:
        description: sub type
        type: string
  ActionSummaryRepresentation:
    description: Summary of actions by 'bucket' to be performed on an asset.
    type: object
    properties:
      adds:
        description: Count for the number of additions to Arrays in the JSON
        type: integer
      bucket:
        description: The bucket these modifications apply to (cosmetic, data)
        type: string
      deletes:
        description: Count of the number of deletes to the JSON.
        type: integer
      puts:
        description: Count of the number of additions to objects in the JSON
        type: integer
      sets:
        description: Count of the number of value changes to the JSON.
        type: integer
      total:
        description: Total number of modifications to the json.
        type: integer
  AddedFieldInputRepresentation:
    description: Field
    type: object
    properties:
      dateSyntax:
        description: Processing syntax for a DateTime field.
        type: string
      defaultValue:
        description: Default value.
        type: string
      description:
        description: Field description.
        type: string
      expression:
        description: Expression attributes used to calculate the value of the derived
          field.
        type: object
      firstDayOfWeek:
        description: For date fields only. The first day of the week for the calendar
          year and, if applicable, fiscal year.
        type: integer
      fiscalMonthOffset:
        description: For date fields only. The difference, in months, between the
          first month of the fiscal year and the first month of the calendar year
          (January).
        type: integer
      format:
        description: Format of the derived date field.
        type: string
      isMultiValue:
        description: For text fields only. Indicates whether the specified field has
          multiple values.
        type: boolean
      isSystemField:
        description: Indicates whether this field is a system field to be excluded
          from query results.
        type: boolean
      isYearEndFiscalYear:
        description: For date fields only. Indicates whether the fiscal year is the
          year in which the fiscal year ends or begins.
        type: boolean
      label:
        description: The display name of the generated field that appears in the Wave
          user interface.
        type: string
      multiValueSeparator:
        description: For text fields only. Character used to separate multiple values
          in the specified field when isMultiValue equals true.
        type: string
      name:
        description: Field name.
        type: string
      precision:
        description: The maximum number of digits in a numeric value, or the length
          of a text value.
        type: integer
      saqlExpression:
        description: SAQL expression used to calculate the value for the derived field.
        type: string
      scale:
        description: 'The number of digits to the right of the decimal point in a
          numeric value. '
        type: integer
      timezone:
        description: Timezone for a DateTime field.
        type: string
      type:
        description: Field type.
        type: string
  AddedFieldRepresentation:
    description: Added field representation
    type: object
    properties:
      dateSyntax:
        description: Processing syntax for a DateTime field.
        type: string
      defaultValue:
        description: Default value
        type: string
      description:
        description: Field description.
        type: string
      expression:
        description: Expression attributes used to calculate the value of the derived
          field.
        type: ExpressionRepresentation
      firstDayOfWeek:
        description: For date fields only. The first day of the week for the calendar
          year and, if applicable, fiscal year.
        type: integer
      fiscalMonthOffset:
        description: For date fields only. The difference, in months, between the
          first month of the fiscal year and the first month of the calendar year
          (January).
        type: integer
      format:
        description: Format of the derived date field.
        type: string
      isMultiValue:
        description: For text fields only. Indicates whether the specified field has
          multiple values.
        type: boolean
      isSystemField:
        description: Indicates whether this field is a system field to be excluded
          from query results.
        type: boolean
      isYearEndFiscalYear:
        description: For date fields only. Indicates whether the fiscal year is the
          year in which the fiscal year ends or begins.
        type: boolean
      label:
        description: The display name of the generated field that appears in the Wave
          user interface.
        type: string
      multiValueSeparator:
        description: For text fields only. Character used to separate multiple values
          in the specified field when isMultiValue equals true.
        type: string
      name:
        description: Field name
        type: string
      precision:
        description: The maximum number of digits in a numeric value, or the length
          of a text value.
        type: integer
      saqlExpression:
        description: SAQL expression used to calculate the value for the derived field.
        type: string
      scale:
        description: 'The number of digits to the right of the decimal point in a
          numeric value. '
        type: integer
      timezone:
        description: Timezone for a DateTime field.
        type: string
      type:
        description: Field type
        type: string
  AdvancedPropertyRepresentation:
    description: An advanced property is an object-level replication property for
      a data source.
    type: object
    properties:
      dataType:
        description: The field type of the advanced property.
        type: string
        enum:
          - Boolean
          - Numeric
          - Text
      defaultValue:
        description: The default value of the advanced property.
        type: object
      description:
        description: The description of the advanced property.
        type: string
      isRequired:
        description: The mandatory nature of the advanced property.
        type: boolean
      label:
        description: The label of the advanced property.
        type: string
      name:
        description: The name of the advanced property attribute.
        type: string
  AdvancedPropertyValueInputRepresentation:
    description: Wave Data Connector Advanced Property input representation
    type: object
    properties:
      name:
        description: The name of the advanced property.
        type: string
      value:
        description: The value of the advanced property
        type: object
  AdvancedPropertyValueRepresentation:
    description: An advanced property Name and Value.
    type: object
    properties:
      name:
        description: The name of the advanced property.
        type: string
      value:
        description: The value of the advanced property
        type: object
  AnalyticsAssetCollectionQueryInputRepresentation:
    description: Input representation for analytics asset collection params.
    type: object
    properties:
      filterPlaceholderDatasets:
        description: Placeholder datasets hidden
        type: boolean
      filters:
        description: Filters
        type: object
        properties:
          //:
            type: object
      limit:
        description: Limit
        type: integer
      mobileOnly:
        description: Hide assets for mobile
        type: boolean
      nextPageToken:
        description: Next Page Token
        type: string
      offset:
        description: Offset
        type: integer
      scope:
        description: Scope
        type: string
        enum:
          - CreatedByMe
          - Favorites
          - IncludeAllPrivate
          - Mru
          - SharedWithMe
      searchTerm:
        description: Search Term
        type: string
      useAutoSuggestions:
        description: UseAutoSuggestions
        type: boolean
  AnalyticsAssetCollectionRepresentation:
    description: A collection of analytics assets.
    type: object
    properties:
      assets:
        description: A collection of analytics assets.
        type: array
        items:
          type: AnalyticsAssetRepresentation
      nextPageToken:
        description: The token for the next page
        type: string
      totalCount:
        description: The total count of assets (without any limits)
        type: integer
  AnalyticsAssetRepresentation:
    description: Analytics asset representation.
    type: BaseWaveAssetRepresentation
    properties:
      dataRefreshDate:
        description: Date when the dataset was last refreshed
        type: string
      files:
        description: List of files used to create this dashboard.
        type: array
        items:
          type: LensFileRepresentation
      folder:
        description: ' The folder which contains this asset.'
        type: AssetReferenceRepresentation
  AppLogRepresentation:
    description: Wave action representation.
    type: object
    properties:
      message:
        description: message
        type: string
  AppendInputRepresentation:
    description: Append Dataflow node input representation
    type: AbstractDataflowNodeInputRepresentation
    properties:
      parameters:
        description: Append parameters.
        type: object
  AppendParamRepresentation:
    description: Append parameters representation
    type: AbstractParamRepresentation
    properties:
      enableDisjointedSchemaMerge:
        description: Enable disjointed schema merge
        type: boolean
  AppendParamsInputRepresentation:
    description: Append parameters input representation
    type: AbstractParamInputRepresentation
    properties:
      enableDisjointedSchemaMerge:
        description: Enable disjointed schema merge
        type: boolean
  AppendRepresentation:
    description: Append node representation
    type: AbstractDataflowNodeRepresentation
    properties:
      parameters:
        description: Parameters
        type: AppendParamRepresentation
  ArrayTypeRepresentation:
    description: Representation for array variable types.
    type: VariableTypeRepresentation
    properties:
      enums:
        description: The restricted list of enumerated values, where applicable for
          the inner variable types.
        type: object
      itemsType:
        description: The variable type contents of the array variable type.
        type: VariableTypeRepresentation
      sizeLimit:
        description: The size limit of the array variable type.
        type: SizeLimitRepresentation
  AssetDiffSummaryRepresentation:
    description: Representation for a summary of all the modifications to be be performed
      on an asset before upgrade
    type: object
    properties:
      assetAction:
        description: The CRUD operation to be performed on the asset
        type: string
        enum:
          - Delete
          - Insert
          - NoChange
          - Update
      createdBy:
        description: User who created the asset.
        type: WaveUserRepresentation
      createdDate:
        description: When the asset was created.
        type: string
      description:
        description: A description of the asset.
        type: string
      file:
        description: Preview Image.
        type: LensFileRepresentation
      id:
        description: Id of the asset
        type: string
      label:
        description: Label of the asset
        type: string
      lastModifiedBy:
        description: User who last modified the asset.
        type: WaveUserRepresentation
      lastModifiedDate:
        description: When the asset was last modified.
        type: string
      reason:
        description: The reason for the modifications
        type: string
      summary:
        description: Array of actions that constitute the modifications.
        type: array
        items:
          type: ActionSummaryRepresentation
      type:
        description: Type of the asset
        type: string
        enum:
          - Component
          - Dashboard
          - DashboardSnapshot
          - DataConnector
          - DataPoolEntity
          - DataPoolEntityVersion
          - Dataflow
          - DataflowJob
          - DataflowJobNode
          - Dataset
          - DatasetShard
          - DatasetVersion
          - ExternalData
          - Folder
          - Lens
          - Recipe
          - ReplicatedDataset
          - Story
          - Workflow
  AssetHistoryCollectionRepresentation:
    description: Representation for Wave asset history
    type: BaseCollectionRepresentation
    properties:
      histories:
        description: The collection of asset histories.
        type: array
        items:
          type: AssetHistoryRepresentation
  AssetHistoryDetailRepresentation:
    description: Detail metadata about a asset history.
    type: BaseAssetHistoryRepresentation
    properties:
      summary:
        description: Asset history summary
        type: array
        items:
          type: AssetHistorySummaryRepresentation
  AssetHistoryInputRepresentation:
    description: Asset History Input Representation
    type: object
    properties:
      label:
        description: The label of the asset.
        type: string
  AssetHistoryRepresentation:
    description: Metadata about an asset history
    type: BaseAssetHistoryRepresentation
    properties: {}
  AssetHistorySummaryRepresentation:
    description: Representation to summarize the asset history
    type: object
    properties:
      total:
        description: The total count of AssetActionHistorySummary entries by type
        type: integer
      type:
        description: The type of changed asset
        type: string
  AssetPublisherCollectionRepresentation:
    description: Representation for Wave Asset Publishers
    type: object
    properties:
      publishers:
        description: The collection of asset publishers.
        type: array
        items:
          type: AssetPublisherRepresentation
  AssetPublisherRepresentation:
    description: Representation for Wave Asset Publisher
    type: object
    properties:
      assetId:
        description: The ID for asset.
        type: string
      id:
        description: The ID for asset publisher record.
        type: string
      publisherUser:
        description: The User in publish mode.
        type: WaveUserRepresentation
  AssetReferenceInputRepresentation:
    description: Simple, reference input representation for wave assets.
    type: BaseAssetReferenceInputRepresentation
    properties: {}
  AssetReferenceRepresentation:
    description: Asset reference representation.
    type: BaseAssetReferenceRepresentation
    properties: {}
  AssetRevertHistoryInputRepresentation:
    description: Wave Dashboard History Representation
    type: object
    properties:
      historyId:
        description: The required source history Id for this asset to revert to.
        type: string
      historyLabel:
        description: The optional history label to tag this change
        type: string
  AugmentInputRepresentation:
    description: Augment Dataflow node input representation
    type: AbstractDataflowNodeInputRepresentation
    properties:
      parameters:
        description: Augment parameters.
        type: object
  AugmentParamRepresentation:
    description: Augment parameters representation
    type: AbstractParamRepresentation
    properties:
      leftKey:
        description: Key column in the left dataset used to augment the datasets
        type: array
        items:
          type: string
      operation:
        description: Indicates what the transformation does if it matches multiple
          rows in the right dataset with a row in the left
        type: string
      relationship:
        description: Relationship between the left and right datasets.
        type: string
      rightKey:
        description: Key column in the right dataset used to augment the datasets.
        type: array
        items:
          type: string
      rightSelect:
        description: An array of column names from the right dataset that you want
          to include in the output dataset.
        type: array
        items:
          type: string
  AugmentParamsInputRepresentation:
    description: Augment parameters input representation
    type: AbstractParamInputRepresentation
    properties:
      leftKey:
        description: Key column in the left dataset used to augment the datasets
        type: array
        items:
          type: string
      operation:
        description: Indicates what the transformation does if it matches multiple
          rows in the right dataset with a row in the left
        type: string
      relationship:
        description: Relationship between the left and right datasets.
        type: string
      rightKey:
        description: Key column in the right dataset used to augment the datasets.
        type: array
        items:
          type: string
      rightSelect:
        description: An array of column names from the right dataset that you want
          to include in the output dataset.
        type: array
        items:
          type: string
  AugmentRepresentation:
    description: Augment node representation
    type: AbstractDataflowNodeRepresentation
    properties:
      parameters:
        description: Parameters
        type: AugmentParamRepresentation
  AuthorizeDatasetInputRepresentation:
    description: Dataset for which access information is requested
    type: object
    properties:
      datasetId:
        description: ID of the dataset whose versions will be queried
        type: string
      datasetVersions:
        description: List of dataset versions to query for access information
        type: array
        items:
          type: object
  AuthorizeDatasetRepresentation:
    description: Access information for a user to a dataset.
    type: object
    properties:
      datasetId:
        description: The 18 character dataset ID.
        type: string
      datasetVersions:
        description: List of access information for each dataset version.
        type: array
        items:
          type: AuthorizeDatasetVersionRepresentation
  AuthorizeDatasetVersionInputRepresentation:
    description: Dataset version for which access information is requested
    type: object
    properties:
      datasetVersionId:
        description: ID of the dataset version to query for access information
        type: string
  AuthorizeDatasetVersionRepresentation:
    description: Access information for a user to a dataset version.
    type: object
    properties:
      datasetVersionId:
        description: The 18 character dataset version ID.
        type: string
      errorMessage:
        description: Message explaining why user is marked as not allowed.
        type: string
      isAllowed:
        description: Whether or not a user has access to this dataset version.
        type: boolean
      predicate:
        description: Row level security predicate for this dataset version.
        type: string
  AuthorizeInputRepresentation:
    description: A set of users for which access information to dataset versions is
      requested
    type: object
    properties:
      users:
        description: List of users to query for access information
        type: array
        items:
          type: object
  AuthorizeRepresentation:
    description: Access information for a set of users.
    type: object
    properties:
      users:
        description: List of access information for each user.
        type: array
        items:
          type: AuthorizeUserRepresentation
  AuthorizeUserInputRepresentation:
    description: User for which access information to dataset versions is requested
    type: object
    properties:
      cacheKey:
        description: Key by which the predicate will be cached
        type: string
      datasets:
        description: List of datasets to query for access information
        type: array
        items:
          type: object
      userId:
        description: ID of the user whose access is being inquired about
        type: string
  AuthorizeUserRepresentation:
    description: Access information for a user to a set of datasets.
    type: object
    properties:
      cacheKey:
        description: Key by which the predicate is cached.
        type: string
      datasets:
        description: List of access information for each dataset.
        type: array
        items:
          type: AuthorizeDatasetRepresentation
      userId:
        description: The 18 character user ID.
        type: string
  BaseAssetHistoryRepresentation:
    description: Metadata about an asset history
    discriminator: name # TODO Hand rolled
    type: object
    properties:
      createdBy:
        description: The user that created this history record.
        type: WaveUserRepresentation
      createdDate:
        description: The date the history was created on the asset.
        type: string
      historyUrl:
        description: The url to the history metadata details.
        type: string
      id:
        description: The ID for this history record.
        type: string
      isCurrent:
        description: Is this history version the current version
        type: boolean
      label:
        description: The optional label tag on the change
        type: string
      name:
        description: The auto generated name of the change.
        type: string
      previewUrl:
        description: The url to a preview how an asset looked back at a particular
          point in time. Does not actually revert the asset.
        type: string
      privatePreviewUrl:
        description: The internal url to a preview how an asset looked back at a particular
          point in time. Does not actually revert the asset.
        type: string
      revertUrl:
        description: The url to revert to this change.
        type: string
      status:
        description: The optional status value of the asset.
        type: string
  BaseAssetInputRepresentation:
    description: Base Wave Asset input Representation
    discriminator: name # TODO Hand rolled
    type: object
    properties:
      description:
        description: Short Description of the asset.
        type: string
      label:
        description: The label of the asset.
        type: string
      name:
        description: The name of the asset.
        type: string
  BaseAssetReferenceInputRepresentation:
    description: Base class for Asset reference input representation
    discriminator: name # TODO Hand rolled
    type: object
    properties:
      id:
        description: ID of the asset
        type: string
      name:
        description: Developer name of the asset
        type: string
      namespace:
        description: The namespace that qualifies the asset name
        type: string
  BaseAssetReferenceRepresentation:
    description: Base asset reference representation.
    discriminator: name # TODO Hand rolled
    type: object
    properties:
      id:
        description: The 18 character ID of the asset.
        type: string
      label:
        description: The asset label.
        type: string
      name:
        description: The asset developer name.
        type: string
      namespace:
        description: The namespace that qualifies the asset name
        type: string
      url:
        description: The asset URL.
        type: string
  BaseCollectionRepresentation:
    description: Base wave collection representation
    discriminator: url # TODO Hand rolled
    type: object
    properties:
      nextPageUrl:
        description: URL to get the next page of contents in the collection.
        type: string
      totalSize:
        description: Gets the total count of the elements in the collection irrespective
          of the page.
        type: integer
      url:
        description: URL to get the collection.
        type: string
  BaseDashboardInputRepresentation:
    description: Wave Dashboard Asset Representation
    type: BaseAssetInputRepresentation
    properties:
      folder:
        description: Folder in which this dashboard is stored.
        type: object
  BaseDatasetFactSearchInputRepresentation:
    description: Base Dataset fact search input.
    discriminator: source # TODO Hand rolled
    type: object
    properties:
      limit:
        description: limit for facts
        type: integer
      sortDirection:
        description: The sort direction for dataset facts (ex. 'ascending', 'descending')
        type: string
        enum:
          - Ascending
          - Descending
      sortField:
        description: The sort field for dataset facts (ex. 'percent', 'occurrences')
        type: string
        enum:
          - Count
          - Percentage
      source:
        description: Source of the fact search API.
        type: string
        enum:
          - Api
          - Nlp
  BaseObjectTypeRepresentation:
    description: Representation for object variable types.
    discriminator: name # TODO Hand rolled
    type: VariableTypeRepresentation
    properties:
      name: # TODO Hand rolled
        description: name
        type: string
      properties:
        description: The defined properties and types of the object variable type.
        type: object
        properties:
          //:
            type: VariableTypeRepresentation
      required:
        description: The required properties of the object variable type.
        type: array
        items:
          type: string
      strictValidation:
        description: Use strict validation when unexpected properties exist in the
          object's payload.
        type: boolean
  BaseWaveAssetRepresentation:
    description: Base Wave asset representation.
    discriminator: type
    type: object
    properties:
      assetSharingUrl:
        description: Sharing URL for the asset.
        type: string
      createdBy:
        description: Represents asset creator.
        type: WaveUserRepresentation
      createdDate:
        description: Time the asset was created.
        type: string
      description:
        description: Short description of the asset.
        type: string
      id:
        description: The 18 character asset ID.
        type: string
      label:
        description: The label of the asset.
        type: string
      lastAccessedDate:
        description: Last time the asset was accessed.
        type: string
      lastModifiedBy:
        description: The user that last updated the asset.
        type: WaveUserRepresentation
      lastModifiedDate:
        description: Last time the asset was modified.
        type: string
      name:
        description: The name of the asset.
        type: string
      namespace:
        description: The namespace of the Asset.
        type: string
      permissions:
        description: Represents permissions for the present user.
        type: PermissionsRepresentation
      type:
        description: The asset type.
        type: string
        enum:
          - Component
          - Dashboard
          - DashboardSnapshot
          - DataConnector
          - DataPoolEntity
          - DataPoolEntityVersion
          - Dataflow
          - DataflowJob
          - DataflowJobNode
          - Dataset
          - DatasetShard
          - DatasetVersion
          - ExternalData
          - Folder
          - Lens
          - Recipe
          - ReplicatedDataset
          - Story
          - Workflow
      url:
        description: URL to get the definition of the asset.
        type: string
  BaseWaveFolderInputRepresentation:
    description: Input representation for wave folders.
    discriminator: name # TODO Hand rolled
    type: object
    properties:
      assetIcon:
        description: The icon enumeration that best represents the new folder or application.
          Valid values are 1.png through 20.png.
        type: string
      description:
        description: The description of the new folder or application.
        type: string
      label:
        description: The user-facing name of the new folder or application.
        type: string
      name:
        description: The internal api name of the new folder or application.
        type: string
  BooleanTypeRepresentation:
    description: Representation for boolean variable types.
    type: VariableTypeRepresentation
    properties:
      enums:
        description: The restricted list of enumerated values, where applicable for
          boolean variable types.
        type: array
        items:
          type: boolean
  ComputeExpressionInputRepresentation:
    description: ComputeExpression Dataflow node input representation
    type: AbstractDataflowNodeInputRepresentation
    properties:
      parameters:
        description: ComputeRelative parameters.
        type: object
  ComputeExpressionParamRepresentation:
    description: ComputeExpression parameters representation
    type: AbstractParamRepresentation
    properties:
      computedFields:
        description: Attributes and expression used to generate derived fields in
          the dataset.
        type: array
        items:
          type: AddedFieldRepresentation
      mergeWithSource:
        description: Indicates whether the input fields are included with the derived
          fields in the resulting dataset.
        type: boolean
  ComputeExpressionParamsInputRepresentation:
    description: ComputeExpression parameters input representation
    type: AbstractParamInputRepresentation
    properties:
      computedFields:
        description: Attributes and expression used to generate derived fields in
          the dataset.
        type: array
        items:
          type: object
      mergeWithSource:
        description: Indicates whether the input fields are included with the derived
          fields in the resulting dataset.
        type: boolean
  ComputeExpressionRepresentation:
    description: ComputeExpression node representation
    type: AbstractDataflowNodeRepresentation
    properties:
      parameters:
        description: Parameters
        type: ComputeExpressionParamRepresentation
  ComputeRelativeInputRepresentation:
    description: ComputeRelative Dataflow node input representation
    type: AbstractDataflowNodeInputRepresentation
    properties:
      parameters:
        description: ComputeRelative parameters.
        type: object
  ComputeRelativeParamRepresentation:
    description: ComputeRelative parameters representation
    type: AbstractParamRepresentation
    properties:
      computedFields:
        description: A list of definitions for derived fields
        type: array
        items:
          type: AddedFieldRepresentation
      orderBy:
        description: Field used to sort the records within each partition and the
          sort order
        type: array
        items:
          type: OrderByRepresentation
      partitionBy:
        description: API name of the field used to partition the records in the dataset
        type: array
        items:
          type: string
  ComputeRelativeParamsInputRepresentation:
    description: ComputeRelative parameters input representation
    type: AbstractParamInputRepresentation
    properties:
      computedFields:
        description: A list of definitions for derived fields
        type: array
        items:
          type: object
      orderBy:
        description: Field used to sort the records within each partition and the
          sort order
        type: array
        items:
          type: object
      partitionBy:
        description: API name of the field used to partition the records in the dataset
        type: array
        items:
          type: string
  ComputeRelativeRepresentation:
    description: ComputeRelative node representation
    type: AbstractDataflowNodeRepresentation
    properties:
      parameters:
        description: Parameters
        type: ComputeRelativeParamRepresentation
  ConditionalFormattingPropertyRepresentation:
    description: Extended metadata for property in conditional formatting linked to
      a Dimension / Measure.
    type: object
    properties:
      parameters:
        description: Parameters for different types.
        type: object
      referenceField:
        description: Conditional Formatting based on Reference field if any.
        type: string
      type:
        description: Conditional Formatting type
        type: string
        enum:
          - Categories
          - Gradient
          - Multiple
          - Raw
          - Single
          - Static
  ConnectionPropertyRepresentation:
    description: A Connection Property represents a property to connect to a data
      connector.
    type: object
    properties:
      dataType:
        description: The field type of the connection property.
        type: string
        enum:
          - Boolean
          - Numeric
          - Text
      defaultValue:
        description: The default value of the connection property.
        type: object
      isEncrypted:
        description: The security setting of the connection property.
        type: boolean
      isRequired:
        description: The mandatory nature of the connection property.
        type: boolean
      label:
        description: The label of the connection property.
        type: string
      maxLength:
        description: The maximum length of the connection property.
        type: integer
      name:
        description: The name of the connection property.
        type: string
  ConnectionPropertyValueRepresentation:
    description: A Connection Property Name and Value.
    type: object
    properties:
      name:
        description: The name of the connection property.
        type: string
      value:
        description: The value of the connection property
        type: object
  ConnectorTypeRepresentation:
    description: Representation for connector variable types.
    type: VariableTypeRepresentation
    properties:
      enums:
        description: The restricted list of enumerated values, where applicable for
          string variable types.
        type: array
        items:
          type: string
  CoverageJobRepresentation:
    description: Output representation of the user coverage POST request
    type: BaseWaveAssetRepresentation
    properties:
      message:
        description: The error/warning message that occurred during the job run
        type: string
      object:
        description: the object name
        type: AssetReferenceRepresentation
      status:
        description: the job status
        type: string
      userCoverage:
        description: The User Coverage calculate by this job
        type: string
  CoveredObjectCollectionRepresentation:
    description: Output representation of the sharing inheritance coverage for a given
      user
    type: object
    properties:
      objectsCovered:
        description: A list of objects covered by Sharing Inheritance
        type: array
        items:
          type: ObjectCoverageRepresentation
  CustomBulkActionInputRepresentation:
    description: Represents a Custom bulk action on a Dashboard.
    type: object
    properties:
      label:
        description: Label for the custom action
        type: string
      visualforce:
        description: Visualforce page to invoke for the custom action
        type: object
  CustomBulkActionRepresentation:
    description: Represents a Custom bulk action in the Wave Dashboard Designer.
    type: object
    properties:
      label:
        description: Label for the custom action
        type: string
      visualforce:
        description: Visualforce page to invoke for the custom action
        type: AssetReferenceRepresentation
  CustomizationActionInputRepresentation:
    description: Input representation wrapper for a rule action.
    type: object
    properties:
      action:
        description: Action that will be applied
        type: object
  CustomizationAssetActionsInputRepresentation:
    description: Input representation a list of rule actions for a given asset.
    type: object
    properties:
      asset:
        description: Asset these actions will be applied to
        type: object
      savePoints:
        description: Rules based actions to apply
        type: array
        items:
          type: object
  CustomizationSavePointInputRepresentation:
    description: Input representation for customization save point.
    type: object
    properties:
      actions:
        description: Rules based actions to apply
        type: array
        items:
          type: object
      apiVersion:
        description: Api version when this action was created.
        format: double
        type: number
  DailyScheduleInputRepresentation:
    description: Input representation for specifying a daily schedule on which to
      execute some type of job.
    type: ScheduleDetailsInputRepresentation
    properties: {}
  DailyScheduleRepresentation:
    description: Daily schedule on which to execute some type of job
    type: ScheduleDetailsRepresentation
    properties: {}
  DataConnectorCollectionRepresentation:
    description: A list of Data Connectors.
    type: object
    properties:
      dataConnectors:
        description: A list of Data Connectors.
        type: array
        items:
          type: DataConnectorRepresentation
      url:
        description: The URL to get the collection.
        type: string
  DataConnectorInputRepresentation:
    description: Wave Data Connector input representation
    type: BaseAssetInputRepresentation
    properties:
      connectionProperties:
        description: Connection properties for the connector
        type: array
        items:
          type: object
      connectorType:
        description: The type of the Data Connector.
        type: string
        enum:
          - ActCRM
          - ActOn
          - AdobeAnalytics
          - AmazonAthena
          - AmazonDynamoDB
          - AmazonS3
          - AmazonS3Output
          - AwsMarketplace
          - AwsRdsAuroraMySQL
          - AwsRdsAuroraPostgres
          - AwsRdsMariaDB
          - AwsRdsMySQL
          - AwsRdsOracle
          - AwsRdsPostgres
          - AwsRdsSqlServer
          - AzureCosmosDB
          - AzureSqlDatabase
          - AzureSqlDatawarehouse
          - AzureTable
          - Box
          - Cassandra
          - Dropbox
          - GoogleAds
          - GoogleAnalytics
          - GoogleBigQuery
          - GoogleBigQueryStandardSQL
          - GoogleCloudStorage
          - GoogleSheets
          - GoogleSpanner
          - HerokuPostgres
          - IbmCloudSqlQuery
          - LinkedIn
          - MarkLogic
          - Marketo
          - MicrosoftAdvertising
          - MicrosoftDynamics
          - MongoDB
          - MulesoftAnaplan
          - MulesoftConcur
          - MulesoftHubSpot
          - MulesoftMarkLogic
          - MulesoftMongoDB
          - MulesoftMySQL
          - MulesoftOracle
          - MulesoftServiceNow
          - MulesoftSqlServer
          - MulesoftSuccessFactors
          - MulesoftWorkday
          - MulesoftZuora
          - NetSuite
          - OracleEloqua
          - Redshift
          - SalesforceCPQ
          - SalesforceCommunityCloud
          - SalesforceEinsteinAnalytics
          - SalesforceExternal
          - SalesforceForceCom
          - SalesforceMarketingCloud
          - SalesforceMarketingCloudFull
          - SalesforceMarketingCloudOAuth2
          - SalesforceReport
          - SalesforceSalesCloud
          - SalesforceServiceCloud
          - SapConcur
          - SapHana
          - SapSuccessFactors
          - ServiceNow
          - SfdcLocal
          - SnowflakeComputing
          - SnowflakeDirect
          - SnowflakeOutput
          - SugarCRM
          - Teradata
          - VeevaVault
          - Xactly
          - Zendesk
          - ZohoCRM
          - ZuoraAQuA
      folder:
        description: Folder for the Live connector
        type: object
      targetConnector:
        description: AssetReference containing ID or API name of target connector
          associated with the current source connector
        type: object
  DataConnectorPropertyInputRepresentation:
    description: Wave Data Connector Property input representation
    type: object
    properties:
      name:
        description: The name of the connection property.
        type: string
      value:
        description: The value of the connection property
        type: object
  DataConnectorRepresentation:
    description: A Data Connector represents a connection.
    type: BaseWaveAssetRepresentation
    properties:
      connectionProperties:
        description: The connection properties.
        type: array
        items:
          type: ConnectionPropertyValueRepresentation
      connectorType:
        description: The type of data connector.
        type: string
        enum:
          - ActCRM
          - ActOn
          - AdobeAnalytics
          - AmazonAthena
          - AmazonDynamoDB
          - AmazonS3
          - AmazonS3Output
          - AwsMarketplace
          - AwsRdsAuroraMySQL
          - AwsRdsAuroraPostgres
          - AwsRdsMariaDB
          - AwsRdsMySQL
          - AwsRdsOracle
          - AwsRdsPostgres
          - AwsRdsSqlServer
          - AzureCosmosDB
          - AzureSqlDatabase
          - AzureSqlDatawarehouse
          - AzureTable
          - Box
          - Cassandra
          - Dropbox
          - GoogleAds
          - GoogleAnalytics
          - GoogleBigQuery
          - GoogleBigQueryStandardSQL
          - GoogleCloudStorage
          - GoogleSheets
          - GoogleSpanner
          - HerokuPostgres
          - IbmCloudSqlQuery
          - LinkedIn
          - MarkLogic
          - Marketo
          - MicrosoftAdvertising
          - MicrosoftDynamics
          - MongoDB
          - MulesoftAnaplan
          - MulesoftConcur
          - MulesoftHubSpot
          - MulesoftMarkLogic
          - MulesoftMongoDB
          - MulesoftMySQL
          - MulesoftOracle
          - MulesoftServiceNow
          - MulesoftSqlServer
          - MulesoftSuccessFactors
          - MulesoftWorkday
          - MulesoftZuora
          - NetSuite
          - OracleEloqua
          - Redshift
          - SalesforceCPQ
          - SalesforceCommunityCloud
          - SalesforceEinsteinAnalytics
          - SalesforceExternal
          - SalesforceForceCom
          - SalesforceMarketingCloud
          - SalesforceMarketingCloudFull
          - SalesforceMarketingCloudOAuth2
          - SalesforceReport
          - SalesforceSalesCloud
          - SalesforceServiceCloud
          - SapConcur
          - SapHana
          - SapSuccessFactors
          - ServiceNow
          - SfdcLocal
          - SnowflakeComputing
          - SnowflakeDirect
          - SnowflakeOutput
          - SugarCRM
          - Teradata
          - VeevaVault
          - Xactly
          - Zendesk
          - ZohoCRM
          - ZuoraAQuA
      folder:
        description: Folder for the Live connection.
        type: AssetReferenceRepresentation
      ingestionSchedule:
        description: Schedule of replication flows for the connection.
        type: ScheduleRepresentation
      targetConnector:
        description: Target connector associated with the current source connector.
        type: AssetReferenceRepresentation
  DataConnectorStatusRepresentation:
    description: A representation for the status of a connection.
    type: object
    properties:
      message:
        description: Message from testing a connection
        type: string
      status:
        description: Result from testing a connection
        type: string
        enum:
          - Failure
          - Success
      url:
        description: The URL to get the collection.
        type: string
  DataConnectorTypeCollectionRepresentation:
    description: A list of Data Connector Types.
    type: object
    properties:
      types:
        description: A list of Data Connector Types.
        type: array
        items:
          type: DataConnectorTypeRepresentation
      url:
        description: The URL to get the collection.
        type: string
  DataConnectorTypeRepresentation:
    description: A Data Connector Type represents a type of connector that can be
      used for replicating data into Wave.
    type: object
    properties:
      advancedProperties:
        description: The advancedProperties of the data connector type.
        type: array
        items:
          type: AdvancedPropertyRepresentation
      associatedCategories:
        description: The categories that the data connector type belongs to.
        type: array
        items:
          type: string
          enum:
            - AdvancedPropertiesSupport
            - BatchRead
            - Direct
            - FileBased
            - FilterSupport
            - MuleSoft
            - Output
      connectionProperties:
        description: The connection properties of the data connector type.
        type: array
        items:
          type: ConnectionPropertyRepresentation
      isExternal:
        description: Indicator of whether the data connector type is external.
        type: boolean
      label:
        description: The label of the data connector type.
        type: string
      name:
        description: The name of the data connector type.
        type: string
      type:
        description: The type of the data connector.
        type: string
        enum:
          - ActCRM
          - ActOn
          - AdobeAnalytics
          - AmazonAthena
          - AmazonDynamoDB
          - AmazonS3
          - AmazonS3Output
          - AwsMarketplace
          - AwsRdsAuroraMySQL
          - AwsRdsAuroraPostgres
          - AwsRdsMariaDB
          - AwsRdsMySQL
          - AwsRdsOracle
          - AwsRdsPostgres
          - AwsRdsSqlServer
          - AzureCosmosDB
          - AzureSqlDatabase
          - AzureSqlDatawarehouse
          - AzureTable
          - Box
          - Cassandra
          - Dropbox
          - GoogleAds
          - GoogleAnalytics
          - GoogleBigQuery
          - GoogleBigQueryStandardSQL
          - GoogleCloudStorage
          - GoogleSheets
          - GoogleSpanner
          - HerokuPostgres
          - IbmCloudSqlQuery
          - LinkedIn
          - MarkLogic
          - Marketo
          - MicrosoftAdvertising
          - MicrosoftDynamics
          - MongoDB
          - MulesoftAnaplan
          - MulesoftConcur
          - MulesoftHubSpot
          - MulesoftMarkLogic
          - MulesoftMongoDB
          - MulesoftMySQL
          - MulesoftOracle
          - MulesoftServiceNow
          - MulesoftSqlServer
          - MulesoftSuccessFactors
          - MulesoftWorkday
          - MulesoftZuora
          - NetSuite
          - OracleEloqua
          - Redshift
          - SalesforceCPQ
          - SalesforceCommunityCloud
          - SalesforceEinsteinAnalytics
          - SalesforceExternal
          - SalesforceForceCom
          - SalesforceMarketingCloud
          - SalesforceMarketingCloudFull
          - SalesforceMarketingCloudOAuth2
          - SalesforceReport
          - SalesforceSalesCloud
          - SalesforceServiceCloud
          - SapConcur
          - SapHana
          - SapSuccessFactors
          - ServiceNow
          - SfdcLocal
          - SnowflakeComputing
          - SnowflakeDirect
          - SnowflakeOutput
          - SugarCRM
          - Teradata
          - VeevaVault
          - Xactly
          - Zendesk
          - ZohoCRM
          - ZuoraAQuA
  DataflowCollectionRepresentation:
    description: A collection of Dataflows.
    type: object
    properties:
      dataflows:
        description: Collection of dataflows.
        type: array
        items:
          type: DataflowRepresentation
  DataflowDefinitionInputRepresentation:
    description: Wave Dataflow definitions input representation
    type: object
    properties:
      nodes:
        description: Node definitions
        type: object
        properties:
          //:
            type: object
  DataflowDefinitionRepresentation:
    description: A Wave dataflow definition.
    type: object
    properties:
      nodes:
        description: node definitions
        type: object
        properties:
          //:
            type: AbstractDataflowNodeRepresentation
  DataflowInputRepresentation:
    description: Wave Dataflow input representation
    type: BaseAssetInputRepresentation
    properties:
      definition:
        description: Dataflow definition
        type: object
      historyLabel:
        description: An optional history label to tag the dataflow version being saved
        type: string
  DataflowJobCollectionRepresentation:
    description: A list of dataflow jobs
    type: object
    properties:
      dataflowJobs:
        description: A list of dataflow jobs
        type: array
        items:
          type: DataflowJobRepresentation
      url:
        description: The URL to get the collection.
        type: string
  DataflowJobInputRepresentation:
    description: DataflowJob input representation
    type: BaseAssetInputRepresentation
    properties:
      command:
        description: Dataflow Job command
        type: string
        enum:
          - Start
          - Stop
      dataflowId:
        description: Dataflow ID
        type: string
  DataflowJobNodeCollectionRepresentation:
    description: A collection of Dataflow Job Nodes.
    type: object
    properties:
      nodes:
        description: Collection of dataflow job nodes.
        type: array
        items:
          type: DataflowJobNodeRepresentation
      url:
        description: URL to get the collection of dataflow job nodes.
        type: string
  DataflowJobNodeRepresentation:
    description: Wave dataflow job node representation.
    type: BaseWaveAssetRepresentation
    properties:
      duration:
        description: The runtime in seconds of a dataflow job node
        type: integer
      errorLogUrl:
        description: Download link for error log blob
        type: string
      inputRows:
        description: The statistics of input rows to a dataflow job node
        type: NodeRowCountRepresentation
      message:
        description: The error or informational message of a dataflow job node
        type: string
      nodeType:
        description: The error or informational message of a dataflow job node
        type: string
        enum:
          - Append
          - Augment
          - BinDigest
          - ComputeExpression
          - ComputeRelative
          - CsvDigest
          - Dataset
          - DeleteRows
          - Delta
          - Digest
          - Dim2Mea
          - Export
          - Filter
          - Flatten
          - IndexDim
          - Internal
          - Prediction
          - Register
          - SfdcFetch
          - SliceDataset
          - SobjectDigest
          - Update
      outputRows:
        description: The statistics of output rows out of a dataflow job node
        type: NodeRowCountRepresentation
      startDate:
        description: The start date of a dataflow job node
        type: string
      status:
        description: The runtime status of a dataflow job node
        type: string
        enum:
          - Aborted
          - Error
          - Pending
          - Running
          - Success
          - Warning
  DataflowJobRepresentation:
    description: Wave dataflow job representation.
    type: BaseWaveAssetRepresentation
    properties:
      duration:
        description: The runtime in seconds of a dataflow job
        type: integer
      executedDate:
        description: The start date of a job's execution.
        type: string
      jobType:
        description: The type of a job
        type: string
        enum:
          - DataSync
          - FileUpload
          - Internal
          - Recipe
          - Recipe_V3
          - Report
          - Restore
          - User
      message:
        description: The error or informational message of a dataflow job
        type: string
      nodesUrl:
        description: The URL of job nodes
        type: string
      progress:
        description: The progress of a job
        format: double
        type: number
      source:
        description: The source of a job
        type: AssetReferenceRepresentation
      startDate:
        description: The start date of a dataflow job
        type: string
      status:
        description: The runtime status of a dataflow job
        type: string
        enum:
          - Failure
          - Preprocessing
          - Queued
          - Running
          - Success
          - Warning
      syncDataflows:
        description: The dataflows to sync when the job is triggered.
        type: DataflowCollectionRepresentation
  DataflowRepresentation:
    description: Wave dataflow asset representation.
    type: BaseWaveAssetRepresentation
    properties:
      current:
        description: Current version of dataflow.
        type: DataflowVersionRepresentation
      definition:
        description: The representation of the dataflow nodes
        type: object
      emailNotificationLevel:
        description: Email notification level of dataflow.
        type: string
        enum:
          - Always
          - Failures
          - Never
          - Warnings
      historiesUrl:
        description: The URL for the dataflow histories associated with the dataflow.
        type: string
      nextScheduledDate:
        description: Next scheduled run of dataflow.
        type: string
      scheduleAttributes:
        description: Schedule attributes of dataflow.
        type: string
  DataflowVersionRepresentation:
    description: A Wave dataflow version.
    type: object
    properties:
      createdBy:
        description: Represents asset creator.
        type: WaveUserRepresentation
      createdDate:
        description: Time the asset was created.
        type: string
      definition:
        description: Dataflow definition
        type: DataflowDefinitionRepresentation
      id:
        description: The 18 character asset ID.
        type: string
  DatasetAnyFieldTypeRepresentaton:
    description: Representation for any generic dataset field variable type.
    type: BaseObjectTypeRepresentation
    properties: {}
  DatasetCollectionRepresentation:
    description: A collection of Wave Datasets.
    type: BaseCollectionRepresentation
    properties:
      datasets:
        description: List of datasets available to the current user.
        type: array
        items:
          type: DatasetRepresentation
  DatasetCoverageRepresentation:
    description: Security coverage for a dataset version.
    type: object
    properties:
      datasetVersion:
        description: Dataset version for which the coverage information applies.
        type: DatasetVersionReferenceRepresentation
      sources:
        description: Source objects for the dataset version
        type: array
        items:
          type: DatasetSourceRepresentation
      url:
        description: URL for retrieving this information.
        type: string
  DatasetCoverageSummaryRepresentation:
    description: Dataset Coverage Summary Report
    type: object
    properties:
      coveragePercentage:
        description: Percentage of total datasets that can be covered by sharing inheritance
        format: double
        type: number
      datasetsCovered:
        description: List of datasets that are eligible for sharing inheritance
        type: array
        items:
          type: AssetReferenceRepresentation
      entityCount:
        description: Mapping of entities to the count of their occurrence in the datasets
        type: object
        properties:
          //:
            type: integer
      totalDatasets:
        description: Total number of datasets in the org
        type: integer
      totalDatasetsCovered:
        description: Total number of datasets in the org that can be covered by sharing
          inheritance
        type: integer
  DatasetDateTypeRepresentation:
    description: Representation for date (in dataset) variable types.
    type: BaseObjectTypeRepresentation
    properties: {}
  DatasetDimensionTypeRepresentation:
    description: Representation for dimension variable types.
    type: BaseObjectTypeRepresentation
    properties: {}
  DatasetFactCollectionRepresentation:
    description: A collection of dataset facts.
    type: object
    properties:
      datasetId:
        description: The dataset ID.
        type: string
      facts:
        description: List of dataset facts.
        type: array
        items:
          type: SingleDatasetFactRepresentation
  DatasetFactRepresentation:
    description: A dataset fact.
    discriminator: field # TODO Hand rolled
    type: object
    properties:
      field:
        description: The field name.
        type: string
      value:
        description: The field value.
        type: string
  DatasetFactSearchInputRepresentation:
    description: Single dataset fact search input.
    type: BaseDatasetFactSearchInputRepresentation
    properties:
      datasetIdOrApiName:
        description: dataset Id or Api Name
        type: string
      terms:
        description: search terms for facts
        type: array
        items:
          type: string
  DatasetFileRepresentation:
    description: A Dataset data file reference.
    type: object
    properties:
      fileName:
        description: The name of the data file.
        type: string
      url:
        description: The URL to retrived the data file.
        type: string
  DatasetInputRepresentation:
    description: Wave Dataset input representation
    type: BaseAssetInputRepresentation
    properties:
      datasetType:
        description: Type of the dataset
        type: string
        enum:
          - Default
          - Live
          - Trended
      folder:
        description: Folder in which this dataset is stored
        type: object
      liveConnection:
        description: Connection details for a live dataset
        type: object
      userXmd:
        description: User XMD associated with this dataset
        type: object
  DatasetMeasureTypeRepresentation:
    description: Representation for measure variable types.
    type: BaseObjectTypeRepresentation
    properties: {}
  DatasetRepresentation:
    description: A Wave dataset.
    type: BaseWaveAssetRepresentation
    properties:
      clientShardsUrl:
        description: The URL for dataset shards.
        type: string
      currentVersionCreatedBy:
        description: User that created the current version.
        type: WaveUserRepresentation
      currentVersionCreatedDate:
        description: Date on which the current version was created.
        type: string
      currentVersionId:
        description: The 18 character ID of the current DatasetVersion.
        type: string
      currentVersionLastModifiedBy:
        description: User that last modified the current version.
        type: WaveUserRepresentation
      currentVersionLastModifiedDate:
        description: Date on which the current version was last modified.
        type: string
      currentVersionTotalRows:
        description: Total row count of this dataset.
        type: integer
      currentVersionUrl:
        description: The URL for the current DatasetVersion.
        type: string
      dataRefreshDate:
        description: Date/time when this dataset was last updated by a dataflow.
        type: string
      datasetType:
        description: The type of the dataset.
        type: string
        enum:
          - Default
          - Live
          - Trended
      folder:
        description: A reference to the folder in which this dataset is stored.
        type: AssetReferenceRepresentation
      lastMetadataChangedDate:
        description: Date/time when the metadata(Edgemart's Folder, MasterLabel, Current,
          EdgemartData's Sharing and security predicate) of dataset was last changed.
        type: string
      lastQueriedDate:
        description: Date/time when this dataset was last queried.
        type: string
      liveConnection:
        description: Live connection details.
        type: LiveConnectionRepresentation
      userXmd:
        description: Reference to the associated user xmd (if any).
        type: XmdRepresentation
      versionsUrl:
        description: The URL for dataset versions.
        type: string
  DatasetShardCollectionRepresentation:
    description: A collection of Dataset Shards.
    type: object
    properties:
      shards:
        description: Collection of dataset shards for a particular dataset.
        type: array
        items:
          type: DatasetShardRepresentation
      url:
        description: URL to get this collection.
        type: string
  DatasetShardRepresentation:
    description: An instantiated version of a Wave Dataset Shard
    type: BaseWaveAssetRepresentation
    properties:
      dataflowJobUrl:
        description: The URL of the job creating this shard asynchronously
        type: string
      datasetExport:
        description: A reference to the DatasetExport for CSV shard
        type: AssetReferenceRepresentation
      datasetVersion:
        description: A reference to the Dataset Version
        type: AssetReferenceRepresentation
      expirationDate:
        description: The date that the dataset shard expires
        type: string
      files:
        description: Information about the data files that make up the Dataset Shard
        type: array
        items:
          type: WaveFileMetadataRepresentation
      filesUrl:
        description: The URL of the files resource for this DatasetShard
        type: string
      shardStatus:
        description: The status of the dataset shard
        type: string
        enum:
          - Completed
          - Failed
          - InProgress
          - New
      totalSizeInKB:
        description: The size in kilobytes of the dataset shard
        type: integer
  DatasetSourceRepresentation:
    description: Source from which a dataset is constructed.
    type: object
    properties:
      object:
        description: Source object for a dataset
        type: ObjectCoverageRepresentation
      securityFields:
        description: Dataset fields relevant to security for the object
        type: array
        items:
          type: string
  DatasetTypeRepresentation:
    description: Representation for dataset variable types.
    type: BaseObjectTypeRepresentation
    properties: {}
  DatasetVersionCollectionRepresentation:
    description: A collection of Dataset Versions.
    type: object
    properties:
      url:
        description: URL to get this collection.
        type: string
      versions:
        description: Collection of dataset versions for a particular dataset.
        type: array
        items:
          type: DatasetVersionRepresentation
  DatasetVersionInputRepresentation:
    description: Input representation for wave Dataset Version.
    type: object
    properties:
      isComplete:
        description: Indicates whether the Dataset Version is complete
        type: boolean
      predicate:
        description: The row level security predicate to be applied to this Dataset
          Version.
        type: string
      sharingSource:
        description: Entity from which sharing rules should be inherited
        type: object
      totalRows:
        description: The total number of rows that make up the Dataset Version
        type: integer
  DatasetVersionReferenceRepresentation:
    description: Reference to a dataset version.
    type: object
    properties:
      dataset:
        description: A reference to the dataset.
        type: AssetReferenceRepresentation
      id:
        description: The 18 character ID of the dataset version.
        type: string
      url:
        description: The asset URL.
        type: string
  DatasetVersionRepresentation:
    description: An instantiated version of a Wave dataset.
    type: BaseWaveAssetRepresentation
    properties:
      dataset:
        description: A reference to the dataset.
        type: AssetReferenceRepresentation
      files:
        description: Information about the data files that make up the dataset version.
        type: array
        items:
          type: WaveFileMetadataRepresentation
      filesUrl:
        description: The URL of the files resource for this dataset version.
        type: string
      predicate:
        description: The row level security predicate.
        type: string
      predicateVersion:
        description: The version of the row level security predicate.
        format: double
        type: number
      securityCoverageUrl:
        description: Dataset sharing inheritance coverage information resource.
        type: string
      sharingSource:
        description: Entity from which sharing rules will be inherited for this dataset
          version
        type: AssetReferenceRepresentation
      source:
        description: The parent dataflow or file for this dataset version.
        type: AssetReferenceRepresentation
      totalRows:
        description: Total number of rows for this dataset version
        type: integer
      xmdMain:
        description: The Extended Metadata (Xmd) for this dataset version.
        type: XmdRepresentation
      xmdsUrl:
        description: The URL of the Xmd Collection resource for this dataset version.
        type: string
  DateTimeTypeRepresentation:
    description: Representation for date/time variable types.
    type: VariableTypeRepresentation
    properties: {}
  DeltaInputRepresentation:
    description: Delta node input representation
    type: AbstractDataflowNodeInputRepresentation
    properties:
      parameters:
        description: Delta parameters.
        type: object
  DeltaParamRepresentation:
    description: Delta parameters representation
    type: AbstractParamRepresentation
    properties:
      dimension:
        description: Dimension column in the dataset used to sort records when calculating
          the delta values
        type: string
      epoch:
        description: Epoch date column in the dataset used to sort records within
          each dimension when calculating delta values
        type: string
      inputMeasure:
        description: Measure column on which you want to calculate the delta
        type: string
      outputMeasure:
        description: Name of the output column that contains the delta value
        type: string
  DeltaParamsInputRepresentation:
    description: Delta parameters input representation
    type: AbstractParamInputRepresentation
    properties:
      dimension:
        description: Dimension column in the dataset used to sort records when calculating
          the delta values
        type: string
      epoch:
        description: Epoch date column in the dataset used to sort records within
          each dimension when calculating delta values
        type: string
      inputMeasure:
        description: Measure column on which you want to calculate the delta
        type: string
      outputMeasure:
        description: Name of the output column that contains the delta value
        type: string
  DeltaRepresentation:
    description: Delta node representation
    type: AbstractDataflowNodeRepresentation
    properties:
      parameters:
        description: Parameters
        type: DeltaParamRepresentation
  DependencyCollectionRepresentation:
    description: A collection of Wave dependencies.
    type: object
    properties:
      dependencies:
        description: List of dependencies of a a particular asset type.
        type: array
        items:
          type: DependencyRepresentation
      totalSize:
        description: Gets the total count of the dependencies irrespective of the
          size of dependencies list.
        type: integer
  DependencyRepresentation:
    description: Wave asset dependencies representation.
    type: object
    properties:
      assetSharingUrl:
        description: Sharing url of asset.
        type: string
      components:
        description: Components that depend on the asset.
        type: DependencyCollectionRepresentation
      dashboards:
        description: Dashboards that depend on the asset.
        type: DependencyCollectionRepresentation
      datasets:
        description: Datasets that depend on the asset.
        type: DependencyCollectionRepresentation
      folder:
        description: The containing folder of the asset.
        type: AssetReferenceRepresentation
      id:
        description: The 18 character asset ID.
        type: string
      lastAccessedDate:
        description: The time at which the asset was last accessed.
        type: string
      lastModifiedBy:
        description: The user who last modified the asset.
        type: WaveUserRepresentation
      lastModifiedDate:
        description: The time at which the asset was last modified.
        type: string
      lenses:
        description: Lenses that depend on the asset.
        type: DependencyCollectionRepresentation
      name:
        description: The name of the asset.
        type: string
      recipes:
        description: Recipes that depend on the asset.
        type: DependencyCollectionRepresentation
      type:
        description: The asset type.
        type: string
        enum:
          - Component
          - Dashboard
          - DashboardSnapshot
          - DataConnector
          - DataPoolEntity
          - DataPoolEntityVersion
          - Dataflow
          - DataflowJob
          - DataflowJobNode
          - Dataset
          - DatasetShard
          - DatasetVersion
          - ExternalData
          - Folder
          - Lens
          - Recipe
          - ReplicatedDataset
          - Story
          - Workflow
      url:
        description: Url to get the definition of the asset.
        type: string
      workflows:
        description: Workflows that depend on the asset.
        type: DependencyCollectionRepresentation
  DigestInputRepresentation:
    description: digest Dataflow node input representation
    type: AbstractDataflowNodeInputRepresentation
    properties:
      parameters:
        description: Digest parameters.
        type: object
  DigestParamsInputRepresentation:
    description: Digest parameters input representation
    type: AbstractDigestParamsInputRepresentation
    properties:
      connectionName:
        description: Connection name used for the digest node
        type: string
  DigestParamsRepresentation:
    description: Digest parameters representation
    type: AbstractDigestParamsRepresentation
    properties:
      connectionName:
        description: Connection name used for digest node
        type: string
  DigestRepresentation:
    description: Digest node representation
    type: AbstractDataflowNodeRepresentation
    properties:
      parameters:
        description: Parameters
        type: DigestParamsRepresentation
  Dim2MeaInputRepresentation:
    description: Dim2mea node input representation
    type: AbstractDataflowNodeInputRepresentation
    properties:
      parameters:
        description: Delta parameters.
        type: object
  Dim2MeaParamRepresentation:
    description: Dim2Mea parameters representation
    type: AbstractParamRepresentation
    properties:
      dimension:
        description: Dimension column in the dataset from which you want to create
          the measure.
        type: string
      measure:
        description: Name of the output measure.
        type: string
      measureDefault:
        description: Default value for the measure if the transformation is unable
          to create a measure from a dimension.
        type: string
      measureType:
        description: "Type of measure. Valid value: 'long'"
        type: string
      multiplier:
        description: Multiplier - must be power of 10
        type: integer
  Dim2MeaParamsInputRepresentation:
    description: Dim2Mea parameters input representation
    type: AbstractParamInputRepresentation
    properties:
      dimension:
        description: Dimension column in the dataset from which you want to create
          the measure.
        type: string
      measure:
        description: Name of the output measure.
        type: string
      measureDefault:
        description: Default value for the measure if the transformation is unable
          to create a measure from a dimension.
        type: string
      measureType:
        description: "Type of measure. Valid value: 'long'"
        type: string
      multiplier:
        description: Multiplier - must be power of 10
        type: integer
  Dim2MeaRepresentation:
    description: Dim2Mea node representation
    type: AbstractDataflowNodeRepresentation
    properties:
      parameters:
        description: Parameters
        type: Dim2MeaParamRepresentation
  DirectoryItemCollectionRepresentation: # TODO Hand rolled
    description: directory item collection representation.
    type: object
    properties: {}
  EventBasedScheduleInputRepresentation:
    description: Input representation for creating an event driven dataflow schedule
    type: ScheduleInputRepresentation
    properties:
      triggerRule:
        description: The expression defining the events that trigger the scheduling
          of the target asset. Currently, only accepting scheduling of Dataflows and
          Recipes as the target asset.
        type: string
  ExportInputRepresentation:
    description: Export Dataset node input representation
    type: AbstractDataflowNodeInputRepresentation
    properties:
      parameters:
        description: Export parameters.
        type: object
  ExportParamRepresentation:
    description: Export parameters representation
    type: AbstractParamRepresentation
    properties:
      target:
        description: Indicates where the exported dataset will be used.
        type: string
      userId:
        description: Determines who can access the exported data.
        type: string
  ExportParamsInputRepresentation:
    description: Export parameters input representation
    type: AbstractParamInputRepresentation
    properties:
      target:
        description: Indicates where the exported dataset will be used.
        type: string
      userId:
        description: Determines who can access the exported data.
        type: string
  ExportRepresentation:
    description: Export node representation
    type: AbstractDataflowNodeRepresentation
    properties:
      parameters:
        description: Parameters
        type: ExportParamRepresentation
  ExpressionInputRepresentation:
    description: Expression
    type: object
    properties:
      dateSyntax:
        description: Processing syntax for a DateTime field
        type: string
      default:
        description: The default value if one can’t be calculated
        type: string
      offset:
        description: The function used in the expression
        type: string
      saqlExpression:
        description: SAQL expression used to calculate the value for the derived field
        type: string
      scale:
        description: The number of digits to the right of the decimal point in a numeric
          value
        type: integer
      sourceField:
        description: API name of the input field from the sfdcDigest transformation
          that is used in the expression
        type: string
      timezone:
        description: DateTime field's Timezone.
        type: string
      type:
        description: Analytics field type associated with the field. Valid types are
          Numeric and Text.
        type: string
        enum:
          - Date
          - DateOnly
          - DateTime
          - Numeric
          - Text
  ExpressionRepresentation:
    description: Expression representation
    type: object
    properties:
      dateSyntax:
        description: Processing syntax for a DateTime field
        type: string
      defaultValue:
        description: The default value if one can’t be calculated
        type: string
      offset:
        description: The function used in the expression
        type: string
      saqlExpression:
        description: SAQL expression used to calculate the value for the derived field
        type: string
      scale:
        description: The number of digits to the right of the decimal point in a numeric
          value
        type: integer
      sourceField:
        description: API name of the input field from the sfdcDigest transformation
          that is used in the expresssion
        type: string
      timezone:
        description: DateTime field's Timezone
        type: string
      type:
        description: Analytics field type associated with the field. Valid types are
          Numeric and Text.
        type: string
        enum:
          - Date
          - DateOnly
          - DateTime
          - Numeric
          - Text
  ExternalDataConnectorQueryInputRepresentation:
    description: A query input representation for external data connectors
    type: object
    properties:
      query:
        description: The query
        type: string
  FeaturedAssetsInputRepresentation:
    description: Input representation for featured assets
    type: object
    properties:
      assets:
        description: list of default featured assets
        type: array
        items:
          type: object
  FeaturedAssetsRepresentation:
    description: Featured assets representation.
    type: object
    properties:
      assets:
        description: The list of featured assets.
        type: array
        items:
          type: TypedAssetReferenceRepresentation
  FetchDatasetInputRepresentation:
    description: Dataset/Edgemart Dataflow node input representation
    type: AbstractDataflowNodeInputRepresentation
    properties:
      parameters:
        description: Dataset parameters.
        type: object
  FetchDatasetParamRepresentation:
    description: Dataset/Edgemart parameters representation
    type: AbstractParamRepresentation
    properties:
      name:
        description: API name of the dataset from which you want to extract data.
        type: string
  FetchDatasetParamsInputRepresentation:
    description: Dataset parameters input representation
    type: AbstractParamInputRepresentation
    properties:
      name:
        description: API name of the dataset from which you want to extract data.
        type: string
  FetchDatasetRepresentation:
    description: Dataset/Edgemart node representation
    type: AbstractDataflowNodeRepresentation
    properties:
      parameters:
        description: Parameters
        type: FetchDatasetParamRepresentation
  FilterConditionsInputRepresentation:
    description: Filter conditions
    type: object
    properties:
      conditions:
        description: Subconditions.
        type: array
        items:
          type: object
      field:
        description: Field to compare.
        type: string
      isQuoted:
        description: Is value quoted.
        type: boolean
      list:
        description: Value list.
        type: array
        items:
          type: string
      operator:
        description: Operator.
        type: string
      value:
        description: Value to compare.
        type: string
  FilterConditionsRepresentation:
    description: Filter conditions representation
    type: object
    properties:
      conditions:
        description: Conditions
        type: array
        items:
          type: FilterConditionsRepresentation
      field:
        description: Field
        type: string
      isQuoted:
        description: Is value quoted
        type: boolean
      list:
        description: List of values
        type: array
        items:
          type: string
      operator:
        description: Operator
        type: string
      value:
        description: Value
        type: string
  FilterInputRepresentation:
    description: Filter node input representation
    type: AbstractDataflowNodeInputRepresentation
    properties:
      parameters:
        description: Filter parameters.
        type: object
  FilterItemInputRepresentation:
    description: Filter Item Input representation
    type: object
    properties:
      dataset:
        description: 'Datasource on which filter will be applied '
        type: object
      dependent:
        description: Value indicating whether filter item is dependent or not
        type: boolean
      fields:
        description: List of fields in filter
        type: array
        items:
          type: string
      hidden:
        description: 'Field to denote if filter is hidden in view mode or not '
        type: boolean
      label:
        description: Label of the filter
        type: string
      locked:
        description: 'Field to denote if filter is locked or not '
        type: boolean
      operator:
        description: 'Operator for the filter '
        type: string
      value:
        description: 'Value for the filter '
        type: string
  FilterItemOptionsInputRepresentation:
    description: Filter Item Options Input representation
    type: object
    properties:
      backgroundColor:
        description: Background color of filter Items
        type: string
      borderColor:
        description: Border color of filter Items
        type: string
      borderRadius:
        description: Border radius of filter Items
        type: integer
      borderWidth:
        description: Border width of filter Items
        type: integer
      propertyColor:
        description: Property color of filter Items
        type: string
      valueColor:
        description: Value color of filter Items
        type: string
  FilterItemOptionsRepresentation:
    description: Filter Item Options representation
    type: object
    properties:
      backgroundColor:
        description: Background color of filter Items
        type: string
      borderColor:
        description: Border color of filter Items
        type: string
      borderRadius:
        description: Border radius of filter Items
        type: integer
      borderWidth:
        description: Border width of filter Items
        type: integer
      propertyColor:
        description: Property color of filter Items
        type: string
      valueColor:
        description: Value color of filter Items
        type: string
  FilterItemReferenceInputRepresentation:
    description: Filter Input representation
    type: object
    properties:
      dataset:
        description: Maps to dataset in filter section
        type: object
      field:
        description: Maps to field in filter section
        type: string
  FilterItemReferenceRepresentation:
    description: Filter representation
    type: object
    properties:
      dataset:
        description: Maps to dataset in filter section
        type: AssetReferenceRepresentation
      field:
        description: Maps to field in filter section
        type: string
  FilterItemRepresentation:
    description: 'Filter item representation for a data source '
    type: object
    properties:
      dataset:
        description: Datasource on which filter will be applied
        type: AssetReferenceRepresentation
      dependent:
        description: Field to denote if filter is depedent or not
        type: boolean
      fields:
        description: List of fields in filter
        type: array
        items:
          type: string
      hidden:
        description: Field to denote if filter is hidden in view mode or not
        type: boolean
      label:
        description: Label of the filter
        type: string
      locked:
        description: Field to denote if filter is locked or not
        type: boolean
      operator:
        description: Operator for the filter
        type: string
      value:
        description: Value for the filter
        type: string
  FilterPanelTitleInputRepresentation:
    description: Filter Panel title input representation
    type: object
    properties:
      separatorColor:
        description: Filter panel's title separator color
        type: string
      text:
        description: "Filter panel's title text "
        type: object
      visible:
        description: Filter panel's title visibility
        type: boolean
  FilterPanelTitleRepresentation:
    description: Filter Panel title representation
    type: object
    properties:
      separatorColor:
        description: Filter panel's title separator color
        type: string
      text:
        description: Filter panel's title text
        type: TextRepresentation
      visible:
        description: Filter panel's title visibility
        type: boolean
  FilterParamRepresentation:
    description: Filter parameters representation
    type: AbstractParamRepresentation
    properties:
      filter:
        description: Filter expression that specifies which records to include in
          the new dataset.
        type: string
      saqlFilter:
        description: SAQL expression that specifies which records to include in the
          new dataset.
        type: string
  FilterParamsInputRepresentation:
    description: Filter parameters input representation
    type: AbstractParamInputRepresentation
    properties:
      dateSyntax:
        description: date syntax version
        type: string
      filter:
        description: Filter expression that specifies which records to include in
          the new dataset.
        type: string
      saqlFilter:
        description: SAQL expression which qualifies records to included in the dataset
          output
        type: string
      timezone:
        description: timezone context
        type: string
  FilterRepresentation:
    description: Filter node representation
    type: AbstractDataflowNodeRepresentation
    properties:
      parameters:
        description: Parameters
        type: FilterParamRepresentation
  FilterStyleInputRepresentation:
    description: Filter Style Input representation
    type: object
    properties:
      titleColor:
        description: Color of displayed title
        type: string
      valueColor:
        description: Color of displayed value
        type: string
  FilterStyleRepresentation:
    description: Filter style representation
    type: object
    properties:
      titleColor:
        description: Color of displayed title
        type: string
      valueColor:
        description: Color of displayed value
        type: string
  FlattenInputRepresentation:
    description: Flatten node input representation
    type: AbstractDataflowNodeInputRepresentation
    properties:
      parameters:
        description: Flatten parameters.
        type: object
  FlattenParamRepresentation:
    description: Flatten parameters representation
    type: AbstractParamRepresentation
    properties:
      includeSelfId:
        description: Flag to see if flatten has to include self id
        type: boolean
      multiField:
        description: Name of the multi-value output field that contains a list of
          all ancestors in the hierarchy, in order from the lowest to the highest
          level.
        type: AddedFieldRepresentation
      parentField:
        description: Name of the input field that identifies the direct parent of
          each node in the hierarchy.
        type: string
      pathField:
        description: A string representation of the multi-field field, separated by
          backslashes.
        type: AddedFieldRepresentation
      selfField:
        description: Name of the input field that identifies each node in the hierarchy.
        type: string
  FlattenParamsInputRepresentation:
    description: Flatten parameters input representation
    type: AbstractParamInputRepresentation
    properties:
      includeSelfId:
        description: Flag to see if flatten has to include self id
        type: boolean
      multiField:
        description: Name of the multi-value output field that contains a list of
          all ancestors in the hierarchy, in order from the lowest to the highest
          level.
        type: object
      parentField:
        description: Name of the input field that identifies the direct parent of
          each node in the hierarchy.
        type: string
      pathField:
        description: A string representation of the multi-field field, separated by
          backslashes.
        type: object
      selfField:
        description: Name of the input field that identifies each node in the hierarchy.
        type: string
  FlattenRepresentation:
    description: Flatten node representation
    type: AbstractDataflowNodeRepresentation
    properties:
      parameters:
        description: Parameters
        type: FlattenParamRepresentation
  FormattedQueryInputRepresentation:
    description: Download Parameters Input Representation
    type: object
    properties:
      columnFormatters:
        description: A map of column and its property parameters
        type: object
        properties:
          //:
            type: object
      fileName:
        description: Name of download file
        type: string
      formatType:
        description: Type of download file
        type: string
        enum:
          - Csv
          - Excel
      groups:
        description: Group parameter
        type: array
        items:
          type: string
      queryObject:
        description: Query object including query to execute and default timezone
        type: object
      widgetParameters:
        description: Widget parameters
        type: object
  GeoDataCollectionRepresentation:
    description: Describes the geo data used by a map
    type: BaseCollectionRepresentation
    properties:
      geoData:
        description: A list of the geodata
        type: array
        items:
          type: GeoDataRepresentation
  GeoDataInputRepresentation:
    description: Input representation of a GeoData.
    type: object
    properties:
      label:
        description: Sets the GeoData label
        type: string
      name:
        description: Sets the GeoData developer name
        type: string
  GeoDataRepresentation:
    description: Describes the geo data used by a map
    type: object
    properties:
      id:
        description: The ID of this geo data record
        type: string
      label:
        description: The user set name for the geo data
        type: string
      name:
        description: The developer name for the geo data
        type: string
      namespace:
        description: The namespace of the geo data.
        type: string
      type:
        description: The type of geo data
        type: string
        enum:
          - GeoJSON
      url:
        description: The url to retrieve the geodata
        type: string
  HourlyScheduleInputRepresentation:
    description: Input representation for creating a subdaily schedule.
    type: ScheduleInputRepresentation
    properties:
      daysOfWeek:
        description: Days of the week on which the schedule will run.
        type: array
        items:
          type: string
          enum:
            - Friday
            - Monday
            - Saturday
            - Sunday
            - Thursday
            - Tuesday
            - Wednesday
      hourlyInterval:
        description: Number of hours in between queueing/scheduling of asset.
        type: integer
      lastHour:
        description: Hour of Day at which the schedule stops queueing the asset for
          processing.
        type: integer
  HourlyScheduleRepresentation:
    description: A schedule which can run multiple times a day.
    type: ScheduleRepresentation
    properties:
      daysOfWeek:
        description: Days of the week on which the schedule will run.
        type: array
        items:
          type: string
          enum:
            - Friday
            - Monday
            - Saturday
            - Sunday
            - Thursday
            - Tuesday
            - Wednesday
      hourlyInterval:
        description: Hours in between each queueing of task.
        type: integer
      lastHour:
        description: Hour at which schedule stops queueing.
        type: integer
  InvalidRecipeDefinitionRepresentation:
    description: Errors and Warnings from recipe validation
    type: object
    properties:
      validationDetails:
        description: Validation details
        type: array
        items:
          type: RecipeValidationDetailRepresentation
  LensFileRepresentation:
    description: Files used to genarate the lens.
    type: object
    properties:
      contentType:
        description: The content type of the file.
        type: string
      fileLength:
        description: The length of the file in KB.
        type: integer
      fileName:
        description: The name of the file.
        type: string
      id:
        description: The 18 character lens file ID.
        type: string
      lastModifiedDate:
        description: The last modified date of the file.
        type: string
      url:
        description: The URL of the file.
        type: string
  LiteralJsonRepresentation:
    description: Represents a string of JSON content that will be serialized as-is.
    type: object
    properties:
      json:
        description: The JSON content to be serialized.
        type: string
  LiveConnectionInputRepresentation:
    description: Connection details for a live dataset
    type: object
    properties:
      connectionName:
        description: The developer name of the connection
        type: string
      sourceObjectName:
        description: The source object name from the connection
        type: string
  LiveConnectionRepresentation:
    description: Connection details of a live dataset
    type: object
    properties:
      connectionLabel:
        description: The label of the connection
        type: string
      connectionName:
        description: The developer name of the connection
        type: string
      sourceObjectName:
        description: The source object name from the connection
        type: string
  MinutelyScheduleInputRepresentation:
    description: Input representation for creating a subhourly schedule.
    type: ScheduleInputRepresentation
    properties:
      daysOfWeek:
        description: Days of the week on which the schedule will run.
        type: array
        items:
          type: string
          enum:
            - Friday
            - Monday
            - Saturday
            - Sunday
            - Thursday
            - Tuesday
            - Wednesday
      lastHour:
        description: Hour of Day at which the schedule stops queueing the asset for
          processing.
        type: integer
      minutelyInterval:
        description: Number of hours in between queueing/scheduling of asset.
        type: integer
  MinutelyScheduleRepresentation:
    description: A schedule which can run multiple times an hour.
    type: ScheduleRepresentation
    properties:
      daysOfWeek:
        description: Days of the week on which the schedule will run.
        type: array
        items:
          type: string
          enum:
            - Friday
            - Monday
            - Saturday
            - Sunday
            - Thursday
            - Tuesday
            - Wednesday
      lastHour:
        description: Hour at which schedule stops queueing.
        type: integer
      minutelyInterval:
        description: Minutes in between each queueing of task.
        type: integer
  MonthlyRelativeScheduleInputRepresentation:
    description: Input representation for creating a monthly schedule where the days
      are relative to their location in the month.
    type: ScheduleInputRepresentation
    properties:
      dayInWeek:
        description: Day of the week when the schedule should be run.
        type: string
        enum:
          - Friday
          - Monday
          - Saturday
          - Sunday
          - Thursday
          - Tuesday
          - Wednesday
      weekInMonth:
        description: Relative week in the month when the schedule should be run.
        type: string
        enum:
          - First
          - Fourth
          - Last
          - Second
          - Third
  MonthlyRelativeScheduleRepresentation:
    description: Schedule which runs monthly on a relative day within the month.
    type: ScheduleRepresentation
    properties:
      dayInWeek:
        description: Day within a week.
        type: string
        enum:
          - Friday
          - Monday
          - Saturday
          - Sunday
          - Thursday
          - Tuesday
          - Wednesday
      weekInMonth:
        description: Week within a month.
        type: string
        enum:
          - First
          - Fourth
          - Last
          - Second
          - Third
  MonthlySpecificScheduleInputRepresentation:
    description: Input representation for creating a monthly schedule where the days
      are fixed by numerical date.
    type: ScheduleInputRepresentation
    properties:
      daysOfMonth:
        description: Days of the month on which the schedule will run (1-31). Note
          that months lacking specific days will skip the job.
        type: array
        items:
          type: integer
  MonthlySpecificScheduleRepresentation:
    description: A schedule which runs once a month on specific (numerical) days of
      the month or on the 'last' day of the month.
    type: ScheduleRepresentation
    properties:
      daysOfMonth:
        description: Days of the month on which the schedule will run (-1, 1-31).
          Note that months lacking specific days will skip the job. Can specify a
          single value of -1 to indicate the last day of the month (-1 cannot be used
          with additional days).
        type: array
        items:
          type: integer
  MultiDatasetFactCollectionRepresentation:
    description: A multiple dataset collection of dataset facts.
    type: object
    properties:
      datasetFacts:
        description: List of dataset fact collections.
        type: array
        items:
          type: MultiDatasetFactRepresentation
  MultiDatasetFactRepresentation:
    description: A multi dataset fact.
    type: DatasetFactRepresentation
    properties:
      dataset:
        description: The dataset ID.
        type: string
  MultiDatasetFactSearchInputRepresentation:
    description: Multiple dataset fact search input.
    type: BaseDatasetFactSearchInputRepresentation
    properties:
      term:
        description: search term for facts
        type: string
  NodeRowCountRepresentation:
    description: Row Statistics of a Job.
    type: object
    properties:
      failedCount:
        description: Number of failed rows.
        format: int64
        type: integer
      processedCount:
        description: Number of processed rows.
        format: int64
        type: integer
  NumberFormatterInputRepresentation:
    description: Valid Number Format Parameters.
    type: object
    properties:
      fullFormat:
        description: Value indicating full format for column.
        type: string
      unitMultiplier:
        description: Value indicating unit multiplier for numeric formatter.
        format: double
        type: number
  NumberTypeRepresentation:
    description: Representation for numeric variable types.
    type: VariableTypeRepresentation
    properties:
      enums:
        description: The restricted list of enumerated values, where applicable for
          numeric variable types.
        type: array
        items:
          format: double
          type: number
      max:
        description: The maximum allowed value of the number.
        format: double
        type: number
      min:
        description: The minimum allowed value of the number.
        format: double
        type: number
  NumericSeparatorsInputRepresentation:
    description: 'Wave XMD measure format number input representation with numeric
      separators '
    type: object
    properties:
      decimal:
        description: Decimal separator
        type: string
      thousands:
        description: Thousands separator
        type: string
  NumericSeparatorsRepresentation:
    description: Thousands and decimal numeric separators
    type: object
    properties:
      decimal:
        description: Decimal separator
        type: string
      thousands:
        description: Thousand separator
        type: string
  ObjectCoverageRepresentation:
    description: Security coverage for an object
    type: object
    properties:
      eligibleSharingSource:
        description: Whether or not the object is an eligible sharing source
        type: boolean
      label:
        description: Label for the object
        type: string
      name:
        description: Name of the object
        type: string
      namespace:
        description: Namespace of the object
        type: string
      securityFields:
        description: Fields relevant to security for the object
        type: array
        items:
          type: string
      unsupportedRecords:
        description: Specific records that are unsupported for sharing inheritance
        type: UnsupportedRecordCollectionRepresentation
      url:
        description: URL for retrieving this information.
        type: string
  ObjectTypeRepresentation:
    description: Representation for object variable types.
    type: BaseObjectTypeRepresentation
    properties: {}
  OrderByInputRepresentation:
    description: OrderBy
    type: object
    properties:
      direction:
        description: 'direction of the ordering: dsc or asc'
        type: string
      name:
        description: name of the field used for ordering
        type: string
  OrderByRepresentation:
    description: OrderBy representation
    type: object
    properties:
      direction:
        description: 'direction of the ordering: dsc or asc'
        type: string
      name:
        description: name of the field used for ordering
        type: string
  OrgStatisticsRepresentation:
    description: Analytics org usage statistics
    type: object
    properties:
      datasetCount:
        description: Current dataset statistics
        type: WaveLimitRepresentation
      rowCount:
        description: Current row statistics
        type: WaveLimitRepresentation
  OutputSourceRepresentation:
    description: output source for output objects
    type: BaseWaveAssetRepresentation
    properties:
      inputRows:
        description: The number of rows in the input of the sync out operation.
        type: integer
      isSyncOut:
        description: Whether this object represents a sync out connection or a recipe
          output connection.
        type: boolean
      nextScheduledDate:
        description: The next scheduled runtime for this output source.
        type: string
      outputRows:
        description: The number of rows in the output of the sync out operation.
        type: integer
  PageRepresentation:
    description: Representation for a single page layout definition for Wave templates.
    type: object
    properties:
      condition:
        description: The optional condition in which the page should be shown. Values
          should be client-side EL notation (e.g. {{Variables.selectedOption}})
        type: string
      helpUrl:
        description: An URL to this page's help webpage.
        type: string
      title:
        description: The title for the page.
        type: string
      variables:
        description: The collection of variables for this template configuration.
        type: array
        items:
          type: PageVariableRepresentation
      vfPage:
        description: The visualforce page to be used as the user interface instead
          of the standard wizard interface.
        type: AssetReferenceRepresentation
  PageVariableRepresentation:
    description: ' Representation for a page variable in the page definition which
      is part of a wave template.'
    type: object
    properties:
      name:
        description: The name of a variable.
        type: string
      visibility:
        description: The visibility expression for this variable
        type: string
  PermissionsRepresentation:
    description: Permissions of the user on an asset.
    type: object
    properties:
      create:
        description: The value which indicates whether the user can create an asset
        type: boolean
      manage:
        description: The value which indicates whether the user can manage access
          control on an asset
        type: boolean
      modify:
        description: The value which indicates whether the user can modify an asset
        type: boolean
      view:
        description: The value which indicates whether the user can view an asset.
        type: boolean
  PredictionInputRepresentation:
    description: Prediction Dataflow node input representation
    type: AbstractDataflowNodeInputRepresentation
    properties:
      parameters:
        description: Prediction parameters.
        type: object
  PredictionParamRepresentation:
    description: Prediction parameters representation
    type: AbstractParamRepresentation
    properties:
      predictionColumnLabel:
        description: Label of the column in the dataset that holds the scores.
        type: string
      predictionColumnName:
        description: Name of the column in the dataset that holds the scores.
        type: string
      predictionDefinitionName:
        description: Name of the model that is used for generating the scores.
        type: string
  PredictionParamsInputRepresentation:
    description: Prediction parameters input representation
    type: AbstractParamInputRepresentation
    properties:
      predictionColumnLabel:
        description: Label of the column in the dataset that holds the scores.
        type: string
      predictionColumnName:
        description: Name of the column in the dataset that holds the scores.
        type: string
      predictionDefinitionName:
        description: Name of the model that is used for generating the scores.
        type: string
  PredictionRepresentation:
    description: Prediction node representation
    type: AbstractDataflowNodeRepresentation
    properties:
      parameters:
        description: Parameters
        type: PredictionParamRepresentation
  RecipeCollectionRepresentation:
    description: A collection of Data Prep recipes.
    type: BaseCollectionRepresentation
    properties:
      recipes:
        description: A list of recipes.
        type: array
        items:
          type: RecipeRepresentation
  RecipeDefinitionInputRepresentation:
    description: Input representation of 3.0 Recipe Definition format.
    type: object
    properties:
      name:
        description: Recipe Name
        type: string
      nodes:
        description: Recipe nodes
        type: object
        properties:
          //:
            type: object
      ui:
        description: Recipe ui metadata
        type: object
      version:
        description: Recipe version
        type: string
  RecipeDefinitionNodesMap:
    description: Wraps a Map of R3 Recipe Definition nodes
    type: object
    properties:
      nodes:
        description: Map of R3 Recipe Definition nodes
        type: object
        properties:
          //:
            type: object
  RecipeDefinitionRepresentation:
    description: Representation of 3.0 Recipe Definition
    type: object
    properties:
      name:
        description: Recipe name
        type: string
      nodes:
        description: Recipe nodes
        type: object
        properties:
          //:
            type: object
      ui:
        description: Recipe ui metadata
        type: object
      version:
        description: Recipe version
        type: string
  RecipeInputRepresentation:
    description: Input representation of a Data Prep recipe.
    type: object
    properties:
      dataflowDefinition:
        description: The recipe's dataflow definition.
        type: string
      executionEngine:
        description: The recipe's execution engine. Spark or Dataflow.
        type: string
        enum:
          - V1
          - V2
      fileContent:
        description: The recipe's file content, base64 encoded. Consider using multipart
          form data instead.
        type: string
      folder:
        description: The recipe's publish folder.
        type: object
      format:
        description: Recipe format type (2.0 or 3.0)
        type: string
        enum:
          - R2
          - R3
      historyLabel:
        description: An optional history label to tag the recipe version being saved.
        type: string
      label:
        description: A short label for the recipe.
        type: string
      name:
        description: The name of the recipe.
        type: string
      publishingTarget:
        description: Target system or format to publish the recipe to. Dataset, DataPool,
          or IoT
        type: string
        enum:
          - DataPool
          - Dataset
          - IoT
      recipeDefinition:
        description: Recipe definition for 3.0 format
        type: object
      rowLevelSecurityPredicate:
        description: The recipe's target dataset's security predicate.
        type: string
      schedule:
        description: The recipe's schedule dataflow run.
        type: string
  RecipeNotificationInputRepresentation:
    description: Input required to create recipe notifications that are sent to the
      current user.
    type: object
    properties:
      longRunningAlertInMins:
        description: Number of minutes that a recipe can run before sending an alert.
        type: integer
      notificationLevel:
        description: Notification level for emails.
        type: string
        enum:
          - Always
          - Failures
          - Never
          - Warnings
  RecipeNotificationRepresentation:
    description: Notification conditions on a recipe for the current user.
    type: object
    properties:
      longRunningAlertInMins:
        description: Number of minutes that a recipe can run before sending an alert.
        type: integer
      notificationLevel:
        description: Notification level for emails.
        type: string
        enum:
          - Always
          - Failures
          - Never
          - Warnings
  RecipePreviewErrorRepresentation:
    description: Errors and validation details when previewing a recipe.
    type: object
    properties:
      errorCategory:
        description: Error category when previewing a recipe.
        type: string
        enum:
          - Internal
          - User
      errorCode:
        description: Error code when previewing a recipe.
        type: integer
      validationDetails:
        description: Validation details for a recipe node during preview.
        type: array
        items:
          type: RecipeValidationDetailRepresentation
  RecipePreviewExtendedStatisticsRepresentation:
    description: Represents statistics for a single column in a recipe preview on
      the interactive server.
    type: AbstractRecipePreviewRepresentation
    properties:
      statistics:
        description: JSON which contains the extended preview statistics. This includes
          distinct values count,frequent values, distribution, summary stats (for
          measures only), and date formats (for dimensions only).
        type: object
      status:
        description: 'The status of a preview extended statistics request. Valid values
          are: Success, Failure, or InProgress'
        type: string
  RecipePreviewInputRepresentation:
    description: Input representation to create a recipe preview.
    type: object
    properties:
      id:
        description: Client generated unique id to track the preview being generated.
        type: string
      recipeId:
        description: ID of an existing recipe being edited.
        type: string
      subgraph:
        description: JSON blob which contains a subgraph conforming to the Recipe
          3.0 definition.
        type: object
  RecipePreviewMetadataRepresentation:
    description: Represents the output response for metadata of recipe preview.
    type: AbstractRecipePreviewRepresentation
    properties:
      metadata:
        description: JSON blob which contains metadata of recipe preview.
        type: object
  RecipePreviewRepresentation:
    description: Represents a recipe preview on the interactive server.
    type: AbstractRecipePreviewRepresentation
    properties:
      data:
        description: JSON blob which contains a recipe output preview as expected
          by the Recipe 3.0 editor.
        type: object
      metadata:
        description: JSON blob which contains preview metadata.
        type: object
      status:
        description: To indicate that the request completed, failed or in progress.
        type: string
      validationDetails:
        description: Warnings when validating a recipe node.
        type: array
        items:
          type: RecipeValidationDetailRepresentation
  RecipePreviewStatisticsRepresentation:
    description: Represents statistics for a recipe preview on the interactive server.
    type: AbstractRecipePreviewRepresentation
    properties:
      statistics:
        description: JSON which contains the basic preview statistics. This includes
          sample size for the entire preview, and for each column the apiName, type
          (one of DIMENSION, MEASURE, DATE, DATETIME, DATEONLY), null count, and url
          to get extended statistics for that column.
        type: object
      status:
        description: 'The status of a preview statistics request. Valid values are:
          Success, Failure, or InProgress'
        type: string
  RecipeRepresentation:
    description: A Data Prep recipe.
    type: BaseWaveAssetRepresentation
    properties:
      dataflowLastUpdate:
        description: Last dataflow update.
        type: string
      dataset:
        description: Target Dataset
        type: AssetReferenceRepresentation
      fileUrl:
        description: URL to get the recipe's file content.
        type: string
      format:
        description: The format of the recipe
        type: string
        enum:
          - R2
          - R3
      historiesUrl:
        description: The URL for the version histories associated with the recipe.
        type: string
      nextScheduledDate:
        description: The next scheduled run of this recipe.
        type: string
      publishingTarget:
        description: The target format or system to publish to. Dataset, DataPool,
          or IoT.
        type: string
        enum:
          - DataPool
          - Dataset
          - IoT
      recipeDefinition:
        description: Recipe definition for 3.0 format
        type: RecipeDefinitionRepresentation
      rowLevelSecurityPredicate:
        description: The security predicate of the target dataset
        type: string
      schedule:
        description: The schedule cron expression current dataflow.
        type: string
      scheduleType:
        description: The schedule type of the recipe
        type: string
        enum:
          - EventDriven
          - TimeDriven
      sourceRecipe:
        description: Recipe from which the current recipe was upconverted to or was
          reverted from.
        type: string
      targetDataflowId:
        description: Target Dataflow ID.
        type: string
      validationDetails:
        description: The validation details for the recipe 3.0
        type: array
        items:
          type: RecipeValidationDetailRepresentation
  RecipeSessionInputRepresentation:
    description: Input representation to create or renew interactive sessions for
      recipes.
    type: object
    properties: {}
  RecipeSessionRepresentation:
    description: Represents a user session on the interactive server for recipes.
    type: object
    properties:
      sessionExpiresInMillis:
        description: Time in milliseconds after which the user session on the interactive
          server will expire.
        format: int64
        type: integer
  RecipeValidationDetailRepresentation:
    description: Validation detail on recipe graph or recipe node
    type: object
    properties:
      message:
        description: Message
        type: string
      nodeName:
        description: Node name
        type: string
      nodeType:
        description: Node type
        type: string
      severity:
        description: Severity
        type: string
        enum:
          - Error
          - Fatal
          - Warning
      validationAction:
        description: Validation action
        type: string
      validationCode:
        description: Validation code
        type: integer
  RegisterInputRepresentation:
    description: sfdcRegister Dataflow node input representation
    type: AbstractDataflowNodeInputRepresentation
    properties:
      parameters:
        description: Register parameters.
        type: object
  RegisterParamRepresentation:
    description: SfdcRegister parameters representation
    type: AbstractParamRepresentation
    properties:
      label:
        description: Display name/Label of the registered dataset.
        type: string
      name:
        description: Alias of dataset to register
        type: string
      rowLevelSecurityFilter:
        description: The predicate used to apply row-level security on the dataset
          when the dataset is first created.
        type: string
      rowLevelSharingSource:
        description: The entity used to apply row-level security on the dataset when
          the dataset is first created.
        type: string
  RegisterParamsInputRepresentation:
    description: Register parameters input representation
    type: AbstractParamInputRepresentation
    properties:
      label:
        description: Display name of the registered dataset.
        type: string
      name:
        description: Alias of dataset to register
        type: string
      rowLevelSecurityFilter:
        description: The predicate used to apply row-level security on the dataset
          when the dataset is first created.
        type: string
      rowLevelSharingSource:
        description: The entity used to apply row-level security on the dataset when
          the dataset is first created.
        type: string
  RegisterRepresentation:
    description: Register node representation
    type: AbstractDataflowNodeRepresentation
    properties:
      parameters:
        description: Parameters
        type: RegisterParamRepresentation
  ReplicatedDatasetCollectionRepresentation:
    description: A list of Replicated Datasets.
    type: object
    properties:
      replicatedDatasets:
        description: A list of Replicated Datasets.
        type: array
        items:
          type: ReplicatedDatasetRepresentation
      url:
        description: The URL to get the collection.
        type: string
  ReplicatedDatasetInputRepresentation:
    description: Replicates data from an external source object into a Wave as a dataset.
      Replicated Datasets are not intended to be visualized directly, but are used
      like a cache to speed up other workflows which refer to the same source object.
    type: object
    properties:
      advancedProperties:
        description: List of user-specified advanced properties associated with this
          object.
        type: array
        items:
          type: object
      connectionMode:
        description: Connection mode for pulling the data from the replicated dataset
        type: string
        enum:
          - Full
          - Incremental
          - PeriodicFull
      connectorId:
        description: The id of the connector object used to replicate.
        type: string
      fullRefresh:
        description: Whether to perform a one-time full refresh (during the next run)
          as opposed to incremental
        type: boolean
      passThroughFilter:
        description: Passthrough filter for the replicated object
        type: string
      rowLevelSharing:
        description: Inherit row level sharing rules for this object
        type: boolean
      sourceObjectName:
        description: The name of the source object to be replicated.
        type: string
  ReplicatedDatasetRepresentation:
    description: Replicates data from an external source object into a Wave as a dataset.
      Replicated Datasets are not intended to be visualized directly, but are used
      like a cache to speed up other workflows which refer to the same source object.
    type: BaseWaveAssetRepresentation
    properties:
      advancedProperties:
        description: The advanced properties associated with this dataset
        type: array
        items:
          type: AdvancedPropertyValueRepresentation
      connectionMode:
        description: The data connection mode configured for this dataset
        type: string
        enum:
          - Full
          - Incremental
          - PeriodicFull
      connector:
        description: Connector information associated with this replication object
        type: DataConnectorRepresentation
      datasetId:
        description: Dataset ID that is associated with the source object being replicated
        type: string
      fieldCount:
        description: Indicates column count for the replicated dataset
        type: integer
      fieldsUrl:
        description: Url to get the fields associated with the replicated dataset
        type: string
      filterApplied:
        description: Indicates if filters have been applied to the replicated dataset
        type: boolean
      lastRefreshedDate:
        description: Indicates the date when the dataset was last run
        type: string
      outputSource:
        description: The output source (recipe or sync out connection) configured
          for this output dataset
        type: OutputSourceRepresentation
      passThroughFilter:
        description: The replicated objects pass through filter string
        type: string
      replicationDataflowId:
        description: Dataflow ID that is associated with running individual replication
          for the object
        type: string
      rowLevelSharing:
        description: Inherit row level sharing rules for this object
        type: boolean
      sourceObjectName:
        description: The name of the source object being replicated.
        type: string
      status:
        description: Current Status of the replicated dataset
        type: string
        enum:
          - Cancelled
          - Checkpoint
          - Dequeued
          - Enqueued
          - Failure
          - Initiated
          - New
          - Serviced
          - Stale
          - Success
          - Warnings
      supportedConnectionModes:
        description: List of supported Connection modes for this dataset
        type: array
        items:
          type: string
          enum:
            - Full
            - Incremental
            - PeriodicFull
  ReplicatedFieldCollectionInputRepresentation:
    description: A list of configuration metadata that specifies how to replicate
      each field of a Replicated Dataset.
    type: object
    properties:
      fields:
        description: The list of field configuration.
        type: array
        items:
          type: object
  ReplicatedFieldCollectionRepresentation:
    description: A list of Replicated Fields.
    type: object
    properties:
      fields:
        description: A list of Replicated Fields.
        type: array
        items:
          type: ReplicatedFieldRepresentation
      url:
        description: URL to get the collection.
        type: string
  ReplicatedFieldInputListRepresentation:
    description: A wrapper around a list of Replicated Fields.
    type: object
    properties:
      fields:
        description: The list of Replicated Fields.
        type: array
        items:
          type: object
  ReplicatedFieldInputRepresentation:
    description: Metadata/configururation for a single field of a Replicated Dataset.
    type: object
    properties:
      defaultValue:
        description: An optional default value.
        type: object
      description:
        description: A long-form description of the field.
        type: string
      fieldType:
        description: The type of the field.
        type: string
        enum:
          - Date
          - DateOnly
          - DateTime
          - Numeric
          - Text
      format:
        description: For dates, the format string is used to parse the input value;
          for other field types, theformat string is used for display.
        type: string
      label:
        description: A user-friendly label for the field.
        type: string
      multiValue:
        description: Indicates if the field is mulit-value or not (default false).
        type: boolean
      multiValueSeparator:
        description: The value separator, used only if this is a multi-value field.
        type: string
      name:
        description: The field's developer name.
        type: string
      precision:
        description: The numeric precision or text length depending on field type.
        type: integer
      scale:
        description: The numeric scale.
        type: integer
      skipped:
        description: If set, this field is ignored when replicating. The field metadata
          is not deleted, however, so  the field can be 'unskipped' and made active
          later.
        type: boolean
      systemField:
        description: Indicates if the field is a system field (default false). System
          fields are not queryable.
        type: boolean
      uniqueId:
        description: Indicates if the field is a unique ID for the data set (default
          false). There can be only one unique ID for any dataset.
        type: boolean
  ReplicatedFieldRepresentation:
    description: Metadata/configururation for a single field of a Replicated Dataset.
    type: AbstractFieldRepresentation
    properties:
      skipped:
        description: If set and true, this field will not be replicated -- but the
          field metadata can still be stored and retrieved.
        type: boolean
  RestoreDatasetVersionInputRepresentation:
    description: Input representation for Restore Dataset Version.
    type: object
    properties:
      sourceVersion:
        description: Source Version to which restore should happen
        type: object
  RestoreDatasetVersionRepresentation:
    description: Representation of a dataset version restore.
    type: object
    properties:
      message:
        description: Collection of dataset versions for a particular dataset.
        type: string
      url:
        description: URL to get the status.
        type: string
  SObjectFieldTypeRepresentation:
    description: Representation for sObject field variable types.
    type: BaseObjectTypeRepresentation
    properties:
      dataType:
        description: The SObjectField datatype when a default field is not supplied.
        type: string
  SObjectTypeRepresentation:
    description: Representation for sObject variable types.
    type: BaseObjectTypeRepresentation
    properties: {}
  ScheduleDetailsInputRepresentation:
    description: Input representation for specifying details for a schedule on which
      to execute a subscription job.
    discriminator: time # TODO Hand rolled
    type: object
    properties:
      time:
        description: The time of the schedule property.
        type: integer
  ScheduleDetailsRepresentation:
    description: Schedule on which to execute some type of job
    discriminator: time # TODO Hand rolled
    type: object
    properties:
      time:
        description: Time in which this schedule is run.
        type: integer
  ScheduleInputRepresentation:
    description: Wave subscription schedule input representation
    discriminator: frequency # TODO Hand rolled
    type: object
    properties:
      details:
        description: The details of the schedule property
        type: object
      frequency:
        description: The frequency of the schedule property.
        type: string
        enum:
          - Daily
          - EventDriven
          - Hourly
          - Minutely
          - Monthly
          - MonthlyRelative
          - Weekly
  ScheduleRepresentation:
    description: Schedule on which to execute some type of job
    discriminator: frequency
    type: object
    properties:
      frequency:
        description: Frequency on which this schedule is run.
        type: string
        enum:
          - Daily
          - EventDriven
          - Hourly
          - Minutely
          - Monthly
          - MonthlyRelative
          - Weekly
      nextScheduledDate:
        description: Next scheduled time (in UTC) for this schedule.
        type: string
      notificationLevel:
        description: Email notification level of dataflow associated with this schedule.
        type: string
        enum:
          - Always
          - Failures
          - Never
          - Warnings
      time:
        description: Hour and timezone in which this schedule is run.
        type: TimeRepresentation
  SfdcDigestInputRepresentation:
    description: sfdcDigest Dataflow node input representation
    type: AbstractDataflowNodeInputRepresentation
    properties:
      parameters:
        description: Digest parameters.
        type: object
  SfdcDigestParamsInputRepresentation:
    description: Sfdc digest parameters input representation
    type: AbstractDigestParamsInputRepresentation
    properties:
      filterConditions:
        description: Filter Conditions
        type: array
        items:
          type: object
      fullRefreshToken:
        description: Performs a one-time full extraction to synchronize the data in
          the dataset with data in the Salesforce object.
        type: string
      incremental:
        description: 'Performs an incremental extraction, which extracts only changes
          to the Salesforce object since the last dataflow run. '
        type: boolean
      passthroughFilter:
        description: A SOQL WHERE clause used to filter records extracted from the
          specified Salesforce object.
        type: string
  SfdcDigestParamsRepresentation:
    description: SfdcDigest parameters representation
    type: AbstractDigestParamsRepresentation
    properties:
      filterConditions:
        description: Filter conditions
        type: array
        items:
          type: FilterConditionsRepresentation
      fullRefreshToken:
        description: 'Performs a one-time full extraction to synchronize the data
          in the dataset with data in the Salesforce object. '
        type: string
      incremental:
        description: 'Performs an incremental extraction, which extracts only changes
          to the Salesforce object since the last dataflow run. '
        type: boolean
      passthroughFilter:
        description: A SOQL WHERE clause used to filter records extracted from the
          specified Salesforce object.
        type: string
  SfdcDigestRepresentation:
    description: SfdcDigest node representation
    type: AbstractDataflowNodeRepresentation
    properties:
      parameters:
        description: Parameters
        type: SfdcDigestParamsRepresentation
  SingleDatasetFactRepresentation:
    description: A single dataset fact.
    type: DatasetFactRepresentation
    properties:
      term:
        description: The fact search term.
        type: string
  SingularUserCoverageRepresentation:
    description: Output representation of the singular user coverage GET request
    type: object
    properties:
      descriptorCount:
        description: Number of descriptors
        type: integer
      reason:
        description: Reason for coverage status
        type: string
      recordCount:
        description: Number of records
        type: integer
      status:
        description: Whether this user is covered or not
        type: string
  SizeLimitRepresentation:
    description: ' Representation for the size limit of an array type variable.'
    type: object
    properties:
      max:
        description: Maximum number of elements in an array
        type: integer
      min:
        description: Minimum number of elements in an array
        type: integer
  SliceDatasetInputRepresentation:
    description: SliceDataset Dataflow node input representation
    type: AbstractDataflowNodeInputRepresentation
    properties:
      parameters:
        description: SliceDataset parameters.
        type: object
  SliceDatasetParamRepresentation:
    description: SliceDataset parameters representation
    type: AbstractParamRepresentation
    properties:
      fields:
        description: Fields to either select or drop from resulting dataset.
        type: array
        items:
          type: AddedFieldRepresentation
      mode:
        description: Indicates which mode to use when slicing dataset.
        type: string
        enum:
          - Drop
          - Select
  SliceDatasetParamsInputRepresentation:
    description: SliceDataset parameters input representation
    type: AbstractParamInputRepresentation
    properties:
      fields:
        description: Fields to either select or drop from resulting dataset.
        type: array
        items:
          type: object
      mode:
        description: Indicates which mode to use when slicing dataset.
        type: string
        enum:
          - Drop
          - Select
  SliceDatasetRepresentation:
    description: SliceDataset node representation
    type: AbstractDataflowNodeRepresentation
    properties:
      parameters:
        description: Parameters
        type: SliceDatasetParamRepresentation
  SnapshotCollectionRepresentation:
    description: Wave snapshot collection representation.
    discriminator: name # TODO Hand rolled
    type: BaseCollectionRepresentation
    properties:
      name: # TODO Hand rolled
        description: Name
        type: string
  SnapshotRepresentation:
    description: Wave snapshot representation.
    discriminator: id # TODO Hand rolled
    type: object
    properties:
      active:
        description: If the subscription is active.
        type: boolean
      assetBundle:
        description: 'The dashboard asset associated with this subscription '
        type: WaveAssetBundleRepresentation
      createdDate:
        description: When the subscription was created.
        type: string
      id:
        description: The 18 character subscription  ID.
        type: string
      lastModifiedDate:
        description: When the subscription was last modified.
        type: string
      schedule:
        description: Schedule of when this subscription is emailed.
        type: SubscriptionScheduleRepresentation
  SourceFieldCollectionRepresentation:
    description: A list of Source Fields.
    type: object
    properties:
      fields:
        description: A list of Source Fields.
        type: array
        items:
          type: SourceFieldRepresentation
      url:
        description: URL to get the collection.
        type: string
  SourceFieldRepresentation:
    description: A field of a Source Object.
    type: AbstractFieldRepresentation
    properties:
      accessDeniedReason:
        description: In the event that this Source Field is inaccessible, this property
          contains a messagedescribing the reason.
        type: string
      accessible:
        description: If this property is present and false, the Source Field is inaccessible
          and cannot be  replicated. Check the accessDeniedReason property for more
          information.
        type: boolean
  SourceObjectCollectionRepresentation:
    description: A paged list of Source Objects.
    type: BaseCollectionRepresentation
    properties:
      sourceObjects:
        description: A list of Source Objects.
        type: array
        items:
          type: SourceObjectRepresentation
  SourceObjectDataInputRepresentation:
    description: Input representation for getting source object data given a list
      of fields and advanced properties
    type: object
    properties:
      advancedProperties:
        description: List of user-specified advanced properties associated with this
          object.
        type: array
        items:
          type: object
      sourceObjectFields:
        description: List of fields as a way to filter the fields returned in the
          response.
        type: array
        items:
          type: string
  SourceObjectDataRepresentation:
    description: A Source Object Data represents the data to be previewed that the
      selected Data Connector knows about.
    type: object
    properties:
      dataListJson:
        description: The json representation, as a string, for data preview to show.
        type: string
      url:
        description: The URL to get this Source Object Data.
        type: string
  SourceObjectRepresentation:
    description: A Source Object represents a specific category or type of data that
      the Data Connector knows about. When a Source Object is replicated into Wave,
      it can be use to create Datasets.
    type: object
    properties:
      accessDeniedReason:
        description: In the event that this Source Object is inaccessible, this property
          contains a messagedescribing the reason.
        type: string
      accessible:
        description: If this property is present and false, the Source Object is inaccessible
          and cannot be  replicated. Check the accessDeniedReason property for more
          information.
        type: boolean
      dataPreviewUrl:
        description: The URL to get the data preview associated with source object
        type: string
      fieldsUrl:
        description: The URL to get the list of Source Fields that this Source Object
          has.
        type: string
      name:
        description: The external name of this Source Object. The specifics will depend
          on the connector type.
        type: string
      replicated:
        description: Indicates if this Source Object is currently replicated by Wave
          or not.
        type: boolean
      url:
        description: The URL to get this Source Object.
        type: string
  StreamedRepresentation: # TODO Hand rolled
    description: streamed representation.
    type: object
    properties: {}
  StringTypeRepresentation:
    description: Representation for string variable types.
    type: VariableTypeRepresentation
    properties:
      enums:
        description: The restricted list of enumerated values, where applicable for
          string variable types.
        type: array
        items:
          type: string
  SubscriptionCollectionRepresentation:
    description: Wave subscription collection representation.
    type: SnapshotCollectionRepresentation
    properties:
      subscriptions:
        description: List of subscriptions available to the current user.
        type: array
        items:
          type: SubscriptionRepresentation
  SubscriptionInputRepresentation:
    description: Input representation for wave subscriptions.
    type: object
    properties:
      active:
        description: Active status of subscription schedule
        type: boolean
      schedule:
        description: Schedule of the subscription
        type: object
  SubscriptionRepresentation:
    description: Wave subscription representation.
    type: SnapshotRepresentation
    properties: {}
  SubscriptionScheduleInputRepresentation:
    description: Subscription schedule on which to execute some type of job
    type: object
    properties:
      details:
        description: Details of the subscription schedule
        type: object
      frequency:
        description: Active status of subscription schedule
        type: string
        enum:
          - Daily
          - EventDriven
          - Hourly
          - Minutely
          - Monthly
          - MonthlyRelative
          - Weekly
  SubscriptionScheduleRepresentation:
    description: Subscription schedule on which to execute some type of job
    type: object
    properties:
      details:
        description: Schedule details - include time and frequency based details
        type: ScheduleDetailsRepresentation
      frequency:
        description: Frequency on which this schedule is run.
        type: string
        enum:
          - Daily
          - EventDriven
          - Hourly
          - Minutely
          - Monthly
          - MonthlyRelative
          - Weekly
  TemplateOptionsRepresentation:
    description: Representation for the options used on the last action performed
      on a templated Wave Application.
    type: object
    properties:
      appAction:
        description: The last template action performed on the templated application.
        type: string
        enum:
          - Create
          - DecoupleApp
          - Overlay
          - Upgrade
      appActionDate:
        description: The date/time the last action was performed.
        type: string
      appActionUser:
        description: The user that performed the last action.
        type: WaveUserRepresentation
  TextRepresentation:
    description: 'General Text Representation '
    type: object
    properties:
      align:
        description: Alignment of the text
        type: string
        enum:
          - Center
          - Left
          - Right
      color:
        description: Color of the text
        type: string
      fontSize:
        description: Font size of the text
        type: integer
      label:
        description: Label for the text
        type: string
  TimeInputRepresentation:
    description: Input representation for the time at which something should happen.
    type: object
    properties:
      hour:
        description: First Hour in day on which the schedule is run (in the time zone
          the schedule will be stored in, which is by default user time zone).
        type: integer
      minute:
        description: Minute offset from hour on which the schedule is first run (in
          the time zone the schedule will be stored in, which is by default user time
          zone).
        type: integer
      timeZone:
        description: time zone the schedule will be stored in, which is by default
          user time zone).
        type: string
  TimeRepresentation:
    description: Time at which something should happen
    type: object
    properties:
      hour:
        description: Hour at which this schedule is run (0-23).
        type: integer
      minute:
        description: Minute at which this schedule is run (0-59).
        type: integer
      timeZone:
        description: Time zone of the hour at which the schedule is run.
        type: TimeZoneRepresentation
  TimeZoneRepresentation:
    description: Information about a time zone.
    type: object
    properties:
      gmtOffset:
        description: The signed offset, in hours, from GMT.
        format: double
        type: number
      name:
        description: The display name of this time zone.
        type: string
      zoneId:
        description: The zone ID of this time zone.
        type: string
  TrendedReportCollectionRepresentation:
    description: A collection of trended reports.
    type: object
    properties:
      trendedReports:
        description: A collection of trended reports.
        type: array
        items:
          type: TrendedReportRepresentation
      url:
        description: URL to get the collection.
        type: string
  TrendedReportInputRepresentation:
    description: Input representation for creating or updating a Trended Report
    type: object
    properties:
      apexHooksClass:
        description: Reference to the apex class to execute after successful trending.
        type: object
      dashboardLabel:
        description: Label for the Wave Dashboard that will be created.
        type: string
      datasetLabel:
        description: Reference to the report being trended.
        type: string
      report:
        description: Reference to the report being trended.
        type: object
      schedule:
        description: Schedule on which the trending should be run.
        type: object
  TrendedReportRepresentation:
    description: A Trended Report.
    type: object
    properties:
      apexHooksClass:
        description: Reference to the apex class which is used for post processing
          each time the report is trended.
        type: AssetReferenceRepresentation
      dashboard:
        description: Reference to the Dashboard for the trended report.
        type: AssetReferenceRepresentation
      dataset:
        description: Reference to the Dataset with the trended report data.
        type: AssetReferenceRepresentation
      id:
        description: The 18 character ID of the trended report.
        type: string
      report:
        description: Reference to the Report that is being trended.
        type: AssetReferenceRepresentation
      schedule:
        description: Schedule of when this report is trended.
        type: ScheduleRepresentation
      status:
        description: The status of trending when the report is trending for the first
          time.
        type: string
        enum:
          - Cancelled
          - Failure
          - InProgress
          - Success
      url:
        description: The URL for the trended report.
        type: string
  TypedAssetReferenceInputRepresentation:
    description: Asset reference input representation with a type
    type: BaseAssetReferenceInputRepresentation
    properties:
      type:
        description: Type of the asset
        type: string
        enum:
          - Component
          - Dashboard
          - DashboardSnapshot
          - DataConnector
          - DataPoolEntity
          - DataPoolEntityVersion
          - Dataflow
          - DataflowJob
          - DataflowJobNode
          - Dataset
          - DatasetShard
          - DatasetVersion
          - ExternalData
          - Folder
          - Lens
          - Recipe
          - ReplicatedDataset
          - Story
          - Workflow
  TypedAssetReferenceRepresentation:
    description: Typed asset reference representation.
    type: BaseAssetReferenceRepresentation
    properties:
      type:
        description: Type of the asset.
        type: string
        enum:
          - Component
          - Dashboard
          - DashboardSnapshot
          - DataConnector
          - DataPoolEntity
          - DataPoolEntityVersion
          - Dataflow
          - DataflowJob
          - DataflowJobNode
          - Dataset
          - DatasetShard
          - DatasetVersion
          - ExternalData
          - Folder
          - Lens
          - Recipe
          - ReplicatedDataset
          - Story
          - Workflow
  UiAppCollectionRepresentation:
    description: A collection of apps for use in the UI.
    type: object
    properties:
      apps:
        description: Apps.
        type: array
        items:
          type: UiAppRepresentation
  UiAppRepresentation:
    description: An app for use in the UI.
    type: object
    properties:
      label:
        description: label
        type: string
      url:
        description: url
        type: string
  UiConfigRepresentation:
    description: UI configuration data.
    type: object
    properties:
      core:
        description: The wave core properties
        type: WaveCoreRepresentation
      features:
        description: The features config
        type: WaveFeaturesRepresentation
      maxGroups:
        description: The maximum number of groups.
        type: integer
      maxMeasures:
        description: The maximum number of measures.
        type: integer
  UiLoglineInputRepresentation:
    description: A logline code and the logline parameters
    type: object
    properties:
      fields:
        description: The logline parameters
        type: object
        properties:
          //:
            type: object
      logLineCode:
        description: The logline code
        type: string
  UiLoglinesInputRepresentation:
    description: A collection of loglines sent from WaveUI to be recorded in splunk
    type: object
    properties:
      loglines:
        description: The list of loglines from WaveUI
        type: array
        items:
          type: object
  UiMetricsInputRepresentation:
    description: An internal metric to be published.
    type: object
    properties:
      type:
        description: The type of metric.
        type: string
  UnsupportedRecordCollectionRepresentation:
    description: Output representation of objects not supported by sharing inheritance
      based on insights limits
    type: object
    properties:
      count:
        description: Count of objects not covered by sharing inheritance, may not
          match the length of values array
        type: integer
      values:
        description: Objects not covered due to sharing limit, list may be shorter
          that count due to limiting for the API
        type: array
        items:
          type: UnsupportedRecordRepresentation
  UnsupportedRecordRepresentation:
    description: Output representation of sharing usage of instances of objects based
      on insights limits
    type: object
    properties:
      descriptorCount:
        description: Number of descriptors for the record id
        type: integer
      id:
        description: Record id
        type: string
  UpdateInputRepresentation:
    description: Update Dataflow node input representation
    type: AbstractDataflowNodeInputRepresentation
    properties:
      parameters:
        description: Update parameters.
        type: object
  UpdateParamRepresentation:
    description: Update parameters representation
    type: AbstractParamRepresentation
    properties:
      leftKey:
        description: Key column in the left dataset used to match records in the other
          dataset.
        type: array
        items:
          type: string
      rightKey:
        description: Key column in the right dataset used to match records in the
          other dataset.
        type: array
        items:
          type: string
      updateColumns:
        description: An array of corresponding columns between the left and right
          datasets.
        type: object
        properties:
          //:
            type: string
  UpdateParamsInputRepresentation:
    description: Update parameters input representation
    type: AbstractParamInputRepresentation
    properties:
      leftKey:
        description: Key column in the left dataset used to match records in the other
          dataset.
        type: array
        items:
          type: string
      rightKey:
        description: Key column in the right dataset used to match records in the
          other dataset.
        type: array
        items:
          type: string
      updateColumns:
        description: An array of corresponding columns between the left and right
          datasets.
        type: object
        properties:
          //:
            type: string
  UpdateRepresentation:
    description: Update node representation
    type: AbstractDataflowNodeRepresentation
    properties:
      parameters:
        description: Parameters
        type: UpdateParamRepresentation
  UserCoverageDetailRepresentation:
    description: Output representation of the sharing inheritance coverage for a given
      user
    type: object
    properties:
      id:
        description: The 18-character user id
        type: string
      name:
        description: The name associated with the 18-character user id
        type: string
      reason:
        description: The reason for the user's coverage status
        type: string
  UserCoverageRepresentation:
    description: Output representation of the user coverage GET request
    type: BaseWaveAssetRepresentation
    properties:
      coverageJob:
        description: Link to the job that created the coverage
        type: AssetReferenceRepresentation
      coveragePercentage:
        description: User coverage percentage
        format: double
        type: number
      object:
        description: The object name
        type: AssetReferenceRepresentation
      userCountCoverageUnknown:
        description: Number of users not whose coverage was indeterminable because
          of some error
        type: integer
      userCountCovered:
        description: Number of users covered by Sharing Inheritance for the given
          object
        type: integer
      userCountNotCovered:
        description: Number of users not covered by Sharing Inheritance for the given
          object
        type: integer
      usersNotCovered:
        description: A list of objects containing user ids and reasons for users that
          are not covered
        type: array
        items:
          type: UserCoverageDetailRepresentation
  UserRepresentation:
    description: Information about a user.
    type: object
    properties:
      id:
        description: The 18 character user ID.
        type: string
      name:
        description: The name of the user.
        type: string
  VariableTypeRepresentation:
    description: Abstractly describes the type of variable definition.
    discriminator: type
    type: object
    properties:
      type:
        description: The type of the variable.
        type: string
        enum:
          - ArrayType
          - BooleanType
          - ConnectorType
          - DatasetAnyFieldType
          - DatasetDateType
          - DatasetDimensionType
          - DatasetMeasureType
          - DatasetType
          - DateTimeType
          - NumberType
          - ObjectType
          - SobjectFieldType
          - SobjectType
          - StringType
  WaveAssetBundleRepresentation:
    description: Wave asset bundled with associated metadata.
    type: object
    properties:
      asset:
        description: Primary asset of the bundle.
        type: BaseWaveAssetRepresentation
      components:
        description: Metadata of Components used in the bundle.
        type: object
        properties:
          //:
            type: BaseWaveAssetRepresentation
      datasets:
        description: Datasets for the bundle.
        type: array
        items:
          type: DatasetRepresentation
      id:
        description: Id of the primary asset the bundle is for.
        type: string
      lastModifiedDate:
        description: Most recent last modified of the assets in the bundle.
        type: string
      sobjects:
        description: SObjects for the bundle.
        type: array
        items:
          type: AssetReferenceRepresentation
      xmds:
        description: XMDs for the bundle.
        type: object
        properties:
          //:
            type: XmdRepresentation
  WaveCoreRepresentation:
    description: Wave core properties
    type: object
    properties:
      defaultTimeZone:
        description: Default time zone for the org
        type: string
      documentImageUrl:
        description: Image servlet url for rendering document image files
        type: string
      embeddedDashboardWhitelist:
        description: List of trusted sites that are allowed to embed Wave Dashboards
        type: array
        items:
          type: string
      imageUrl:
        description: Base image url for rendering content files
        type: string
      lightningDomainUrl:
        description: Lightning domain url for the org
        type: string
      maxConditionalFormattingBins:
        description: Maximum number of Bins allowed for Conditional Formatting in
          asset extended metadata
        type: integer
      maxDashboardPages:
        description: Maximum number of pages that are allowed in the WaveUI dashboard
        type: integer
      timeZoneEnabled:
        description: Time zone enabled property for the org
        type: boolean
      visualforce:
        description: Wave core visualforce properties
        type: WaveCoreVisualforceRepresentation
  WaveCoreVisualforceRepresentation:
    description: Wave core visualforce properties
    type: object
    properties:
      namespacedUrlTemplate:
        description: Namespaced base URL for serving a specific Visualforce page
        type: string
      urlTemplate:
        description: Base URL for serving a specific Visualforce page
        type: string
  WaveDatasetVersionFileMetadataCollectionRepresentation:
    description: A collection of Wave dataset files.
    type: BaseCollectionRepresentation
    properties:
      files:
        description: List of files available to the current user.
        type: array
        items:
          type: DatasetFileRepresentation
  WaveEncryptionKeyCollectionRepresentation:
    description: Representation for a list of Wave encryption keys.
    type: object
    properties:
      keys:
        description: List of Wave encryption keys.
        type: array
        items:
          type: WaveEncryptionKeyRepresentation
  WaveEncryptionKeyRepresentation:
    description: Representation for a single Wave encryption key object.
    type: object
    properties:
      id:
        description: The key id.
        type: string
      key:
        description: The key value.
        type: string
  WaveFeaturesRepresentation:
    description: Wave features.
    type: object
    properties:
      canAccessFirebirdEditor:
        description: Can the user access Recipe 3.0 editor
        type: boolean
      canCreateAndEditDashboards:
        description: Can the user create and edit Dashboards
        type: boolean
      canCreateApplications:
        description: Can the user create applications
        type: boolean
      canEditReplication:
        description: Can the user edit Replication setup.
        type: boolean
      canUploadExternalData:
        description: Can the user upload external data
        type: boolean
      canUseAppTemplates:
        description: Can the user access App Templates
        type: boolean
      canUseDashboardSavedViews:
        description: Can Dashboard Saved Views be used in the org
        type: boolean
      canUseSentimentAnalysisRecipes:
        description: Can the user access sentiment analysis for recipes
        type: boolean
      canUseWave:
        description: Can the user access Wave
        type: boolean
      canUseWaveAnnotation:
        description: Can the user access Wave Annotation
        type: boolean
      canUseWaveSparkELT:
        description: Can the user access Moana features
        type: boolean
      isWaveCommunitiesUser:
        description: Is the user a Wave Communities user
        type: boolean
      orgHasFavorites:
        description: Org has favorites perm turned on or not.
        type: boolean
      orgHasFirebirdEditor:
        description: Org has Recipe 3.0 editor enabled
        type: boolean
      orgHasWatchlistEnabled:
        description: Org has watchlist enabled or not.
        type: boolean
  WaveFileMetadataCollectionRepresentation:
    description: Representation for Wave file metadata collection
    type: BaseCollectionRepresentation
    properties:
      files:
        description: The file metadata list.
        type: array
        items:
          type: WaveFileMetadataRepresentation
  WaveFileMetadataRepresentation:
    description: Information about a file.
    type: object
    properties:
      createdBy:
        description: created by user
        type: WaveUserRepresentation
      createdDate:
        description: created date
        type: string
      id:
        description: The 18 character lens file ID.
        type: string
      lastAccessedDate:
        description: last accessed date
        type: string
      lastModifiedDate:
        description: last modified date
        type: string
      length:
        description: size of the lens file
        type: integer
      name:
        description: name of lens file
        type: string
      url:
        description: url of file.
        type: string
  WaveFolderCollectionRepresentation:
    description: Representation for a collection of Wave analytics folders or applications.
    type: BaseCollectionRepresentation
    properties:
      folders:
        description: The folder list.
        type: array
        items:
          type: WaveFolderRepresentation
  WaveFolderCustomizationInputRepresentation:
    description: A representation for applying rules based customizations to a folder
    type: object
    properties:
      customizations:
        description: The list off assets and actions to apply
        type: array
        items:
          type: object
  WaveFolderDiffRepresentation:
    description: Representation for a difference summary of an application before
      and after upgrade
    type: object
    properties:
      assets:
        description: Array of difference summaries for each asset.
        type: array
        items:
          type: AssetDiffSummaryRepresentation
      zipUrl:
        description: Url to diff zip file download.
        type: string
  WaveFolderInputRepresentation:
    description: Input representation for wave folders.
    type: BaseWaveFolderInputRepresentation
    properties:
      applicationStatus:
        description: The creation status of application.
        type: string
        enum:
          - CancelledStatus
          - CompletedStatus
          - DataflowInProgressStatus
          - ExtensionAssetTypeInProgressStatus
          - FailedStatus
          - InProgressStatus
          - NewStatus
      attachedFiles:
        description: The attached file id list
        type: array
        items:
          type: object
      canBeSharedExternally:
        description: Whether the application is shared in Communities
        type: boolean
      defaultAsset:
        description: The ID of a lens/dashboard which is presented by default for
          this application in App Runtime.
        type: object
      featuredAssets:
        description: The featured assets for this application to be used in the UI.
        type: object
        properties:
          //:
            type: object
      isPinned:
        description: Whether the application is a pinned folder or not
        type: boolean
      shares:
        description: The folder sharing rules.
        type: array
        items:
          type: object
  WaveFolderOverlayInputRepresentation:
    description: A representation for the source folder when overlaying one folder
      on top of another
    type: object
    properties:
      sourceFolderId:
        description: The source folder to overlay from
        type: string
  WaveFolderRepresentation:
    description: Representation for a single Wave analytics folder or application.
    type: BaseWaveAssetRepresentation
    properties:
      appLog:
        description: The app log from the creation of this application.
        type: array
        items:
          type: AppLogRepresentation
      applicationStatus:
        description: The creation status of application.
        type: string
        enum:
          - CancelledStatus
          - CompletedStatus
          - DataflowInProgressStatus
          - ExtensionAssetTypeInProgressStatus
          - FailedStatus
          - InProgressStatus
          - NewStatus
      attachedFiles:
        description: The id's of the files attached to the insights folder
        type: array
        items:
          type: AssetReferenceRepresentation
      canBeSharedExternally:
        description: Whether this app can be shared with Community Users.
        type: boolean
      defaultAsset:
        description: The default asset(lens/dashboard) that is presented when the
          app is viewed in AppRuntime mode.
        type: AssetReferenceRepresentation
      featuredAssets:
        description: Featured assets for this application to be used in the UI.
        type: object
        properties:
          //:
            type: FeaturedAssetsRepresentation
      icon:
        description: The asset icon.
        type: AssetReferenceRepresentation
      isPinned:
        description: Whether this app is pinned/unpinned
        type: boolean
      shares:
        description: The folder shares list.
        type: array
        items:
          type: WaveFolderShareRepresentation
      templateOptions:
        description: The options used on the last action performed on a templated
          Wave Application.
        type: TemplateOptionsRepresentation
      templateSourceId:
        description: The source template ID or api name used to create the folder
          or application.
        type: string
      templateValues:
        description: The template values used to create or update the folder or application
          (where applicable).
        type: object
        properties:
          //:
            type: object
      templateVersion:
        description: The version of the template this application was created from.
        type: string
  WaveFolderShareInputRepresentation:
    description: Represents a single folder sharing rule.
    type: object
    properties:
      accessType:
        description: The access type.
        type: string
        enum:
          - Edit
          - Manage
          - View
      shareType:
        description: The share type.
        type: string
        enum:
          - AllCspUsers
          - AllPrmUsers
          - CustomerPortalUser
          - Group
          - Organization
          - PartnerUser
          - PortalRole
          - PortalRoleAndSubordinates
          - Role
          - RoleAndSubordinates
          - User
      sharedWithId:
        description: ID of the entity that the folder is shared with.
        type: string
  WaveFolderShareRepresentation:
    description: An instantiated version of a Wave share.
    type: object
    properties:
      accessType:
        description: The access type of the user.
        type: string
        enum:
          - Edit
          - Manage
          - View
      imageUrl:
        description: The url of the user image.
        type: string
      shareType:
        description: The share type of the user.
        type: string
        enum:
          - AllCspUsers
          - AllPrmUsers
          - CustomerPortalUser
          - Group
          - Organization
          - PartnerUser
          - PortalRole
          - PortalRoleAndSubordinates
          - Role
          - RoleAndSubordinates
          - User
      sharedWithId:
        description: The Id of the user with the share representation.
        type: string
      sharedWithLabel:
        description: The label for the share user/group/org.
        type: string
  WaveFolderTemplateInputRepresentation:
    description: Input representation for wave folders created from templates.
    type: BaseWaveFolderInputRepresentation
    properties:
      templateOptions:
        description: Directive options for determining the final actions when upgrading
          an application from a template..
        type: object
      templateSourceId:
        description: The source template ID or api name used to create the folder
          or application.
        type: string
      templateValues:
        description: The runtime template values to use during folder/application
          creation, as specified by the individual application template.
        type: object
        properties:
          //:
            type: object
  WaveLimitRepresentation:
    description: Analytics limit representation
    type: object
    properties:
      current:
        description: Total used count currently
        format: int64
        type: integer
      max:
        description: Max counts that Analytics allows
        format: int64
        type: integer
  WaveUserRepresentation:
    description: Information about a user.
    type: object
    properties:
      id:
        description: The 18 character user ID.
        type: string
      name:
        description: The name of the user.
        type: string
      profilePhotoUrl:
        description: The Chatter profile photo of the user.
        type: string
  WeeklyScheduleInputRepresentation:
    description: Input representation for creating a weekly schedule.
    type: ScheduleDetailsInputRepresentation
    properties:
      daysOfWeek:
        description: Days of the week on which the schedule will run.
        type: array
        items:
          type: string
          enum:
            - Fri
            - Mon
            - Sat
            - Sun
            - Thu
            - Tue
            - Wed
  WeeklyScheduleRepresentation:
    description: Weekly schedule on which to execute some type of job
    type: ScheduleDetailsRepresentation
    properties:
      daysOfWeek:
        description: Days of the week on which the schedule will run.
        type: array
        items:
          type: string
          enum:
            - Fri
            - Mon
            - Sat
            - Sun
            - Thu
            - Tue
            - Wed
  XmdBaseDimensionActionInputRepresentation:
    description: Base class for XMD Dimension and Derived Dimension Action.
    discriminator: name # TODO Hand rolled
    type: object
    properties:
      enabled:
        description: Whether the Action is enabled.
        type: boolean
      name:
        description: Name of the action.
        type: string
  XmdBaseDimensionCustomActionInputRepresentation:
    description: Base class for Wave XMD Dimension and Dervied Dimension Custom Action
      input representation
    discriminator: method # TODO Hand rolled
    type: XmdBaseDimensionActionInputRepresentation
    properties:
      icon:
        description: icon for the action.
        type: string
      method:
        description: method for the action.
        type: string
      target:
        description: target for the action.
        type: string
      tooltip:
        description: tooltip for the action.
        type: string
      url:
        description: Url for the action.
        type: string
  XmdBaseDimensionInputRepresentation:
    description: Base class for Wave XMD Dimension and Derived Dimension input representation
    discriminator: origin # TODO Hand rolled
    type: object
    properties:
      conditionalFormatting:
        description: Conditional formatting for a Dimension.
        type: object
        properties:
          //:
            type: object
      customActionsEnabled:
        description: Whether the Dimension has custom actions enabled.
        type: boolean
      dateFormat:
        description: Date format to be used for a Date that is a dimension.
        type: string
      defaultAction:
        description: Default action for the dimension.
        type: string
      description:
        description: Description of the Dimension.
        type: string
      field:
        description: Field name of the Dimension (used in queries).
        type: string
      fullyQualifiedName:
        description: Fully qualified name of the dimension.
        type: string
      imageTemplate:
        description: Image template.
        type: string
      label:
        description: Label for the Dimension.
        type: string
      linkTemplate:
        description: Template for formatting a Link.
        type: string
      linkTemplateEnabled:
        description: Whether the Dimension has link templates enabled.
        type: boolean
      linkTooltip:
        description: Tooltip to be displayed for links.
        type: string
      origin:
        description: Origin of this dimension.
        type: string
      recordDisplayFields:
        description: Ordered list of Dimensions and Measures. Represents the default
          order to show them in the UI.
        type: array
        items:
          type: string
      recordIdField:
        description: Record Id for this dimension.
        type: string
      recordOrganizationIdField:
        description: Record Organization Id for this dimension.
        type: string
      salesforceActionsEnabled:
        description: Whether the Dimension has salesforce actions enabled.
        type: boolean
      showInExplorer:
        description: Whether the Dimension should be shown in the Explorer.
        type: boolean
  XmdBaseDimensionMemberInputRepresentation:
    description: Base class for Wave XMD Dimension and Derived Dimension Member input
      representation
    discriminator: member # TODO Hand rolled
    type: object
    properties:
      color:
        description: Color for the member.
        type: string
      label:
        description: Label for the member.
        type: string
      member:
        description: Member value.
        type: string
  XmdBaseDimensionSalesforceActionInputRepresentation:
    description: Base class Wave XMD Dimension and Derived Dimension Salesforce Action
      input representation
    discriminator: name # TODO Hand rolled
    type: XmdBaseDimensionActionInputRepresentation
    properties:
      name: # TODO Hand rolled
        description: Name
        type: string
  XmdBaseMeasureFormatInputRepresentation:
    description: Base class for Wave XMD Measure and Derived Measure Format input
      representation
    discriminator: unit # TODO Hand rolled
    type: object
    properties:
      customFormat:
        description: displays the original xmd 1.1 format array as a String.
        type: string
      decimalDigits:
        description: Number of digits to be displayed after the decimal place.
        type: integer
      delimiters:
        description: Thousands and decimal numeric separators for number formatting
        type: object
      negativeParentheses:
        description: displays negative numbers with parenthesis or not minus sign
        type: boolean
      prefix:
        description: Prefix to be placed before the field value.
        type: string
      suffix:
        description: Suffix to be placed after the field value.
        type: string
      unit:
        description: Unit string for the measure. (eg. 'cm')
        type: string
      unitMultiplier:
        description: Multiplier for the unit.
        format: double
        type: number
  XmdBaseMeasureInputRepresentation:
    description: Base class for Wave XMD Measure and Derived Measure input representation
    discriminator: field # TODO Hand rolled
    type: object
    properties:
      conditionalFormatting:
        description: Conditional formatting for a Measure.
        type: object
        properties:
          //:
            type: object
      dateFormat:
        description: Date format to be used for a Date that is a measure.
        type: string
      description:
        description: Description of the Measure.
        type: string
      field:
        description: Field name of the Measure (used in queries).
        type: string
      fullyQualifiedName:
        description: Fully qualified name of the Measure.
        type: string
      label:
        description: Label for the Measure.
        type: string
      origin:
        description: Origin of the Measure.
        type: string
      showInExplorer:
        description: Whether the Measure should be shown in the Explorer.
        type: boolean
  XmdDatasetInputRepresentation:
    description: Wave XMD Dataset input representation
    type: object
    properties:
      connector:
        description: Connector source for the dataset.
        type: string
      description:
        description: Description of the dataset.
        type: string
      fullyQualifiedName:
        description: Fully qualified name of the dataset version.
        type: string
      origin:
        description: Origin representing where this dataset version comes from.
        type: string
  XmdDatasetRepresentation:
    description: Extended metadata for the dataset
    type: object
    properties:
      connector:
        description: Connector source for the dataset
        type: string
      description:
        description: Description of the dataset.
        type: string
      fullyQualifiedName:
        description: Fully qualified name of the dataset version.
        type: string
      origin:
        description: Origin representing where this dataset version comes from.
        type: string
  XmdDateFieldRepresentation:
    description: Extended metadata for the formatting of a Date Field in a Dataset.
    type: object
    properties:
      day:
        description: day field.
        type: string
      epochDay:
        description: epochDay field.
        type: string
      epochSecond:
        description: epochSecond field.
        type: string
      fiscalMonth:
        description: fiscalMonth field.
        type: string
      fiscalQuarter:
        description: fiscalQuarter field.
        type: string
      fiscalWeek:
        description: fiscalWeek field.
        type: string
      fiscalYear:
        description: fiscalYear field.
        type: string
      fullField:
        description: fullField field.
        type: string
      hour:
        description: hour field
        type: string
      minute:
        description: minute field
        type: string
      month:
        description: month field.
        type: string
      quarter:
        description: quarter field.
        type: string
      second:
        description: second field
        type: string
      week:
        description: week field.
        type: string
      year:
        description: year field.
        type: string
  XmdDateFieldsInputRepresentation:
    description: Wave XMD Date Fields input representation
    type: object
    properties:
      day:
        description: day field.
        type: string
      epochDay:
        description: epochDay field.
        type: string
      epochSecond:
        description: epochSecond field.
        type: string
      fiscalMonth:
        description: fiscalMonth field.
        type: string
      fiscalQuarter:
        description: fiscalQuarter field.
        type: string
      fiscalWeek:
        description: fiscalWeek field.
        type: string
      fiscalYear:
        description: fiscalYear field.
        type: string
      fullField:
        description: fullField field.
        type: string
      hour:
        description: hour field.
        type: string
      minute:
        description: minute field.
        type: string
      month:
        description: month field.
        type: string
      quarter:
        description: quarter field.
        type: string
      second:
        description: second field.
        type: string
      week:
        description: week field.
        type: string
      year:
        description: year field.
        type: string
  XmdDateInputRepresentation:
    description: Wave XMD Date input representation
    type: object
    properties:
      alias:
        description: Alias of the Date column.
        type: string
      compact:
        description: Whether the Date should be displayed as compact.
        type: boolean
      description:
        description: Description of the Date column.
        type: string
      fields:
        description: Formatting information for the date fields.
        type: object
      firstDayOfWeek:
        description: What the first day of the week is.
        type: integer
      fiscalMonthOffset:
        description: Offset number of months for the fiscal year in relation to the
          calendar year.
        type: integer
      fullyQualifiedName:
        description: Fully qualified name of the date.
        type: string
      isYearEndFiscalYear:
        description: Whether the Year End is the Fiscal year.
        type: boolean
      label:
        description: Label of the Date column.
        type: string
      showInExplorer:
        description: Whether the Date should be show in the explorer.
        type: boolean
  XmdDateRepresentation:
    description: Extended metadata for a date
    type: object
    properties:
      alias:
        description: Alias of the Date column.
        type: string
      compact:
        description: Whether or not the Date should be displayed as compact.
        type: boolean
      description:
        description: Description of the Date column.
        type: string
      fields:
        description: Formatting information for the date fields.
        type: XmdDateFieldRepresentation
      firstDayOfWeek:
        description: What the first day of the week is.
        type: integer
      fiscalMonthOffset:
        description: Offset number of months for the fiscal year in relation to the
          calendar year.
        type: integer
      fullyQualifiedName:
        description: Fully qualified name of the date.
        type: string
      isConvertedDateTime:
        description: If the DateTime type is from timezone auto conversion.
        type: boolean
      isYearEndFiscalYear:
        description: If the Year End is the Fiscal year.
        type: boolean
      label:
        description: Label of the Date column.
        type: string
      showInExplorer:
        description: Whether or not the Date should be show in the explorer.
        type: boolean
      type:
        description: Date type of the Date column.
        type: string
        enum:
          - Date
          - DateOnly
          - DateTime
  XmdDerivedDimensionCustomActionInputRepresentation:
    description: Wave XMD Derived Dimension Custom Action input representation
    type: XmdBaseDimensionCustomActionInputRepresentation
    properties: {}
  XmdDerivedDimensionInputRepresentation:
    description: Wave XMD Derived Dimension input representation
    type: XmdBaseDimensionInputRepresentation
    properties:
      customActions:
        description: Custom Actions linked to this Derived Dimension.
        type: array
        items:
          type: object
      isMultiValue:
        description: Whether the Derived Dimension is multi-value.
        type: boolean
      members:
        description: Member overrides for a Derived Dimension.
        type: array
        items:
          type: object
      salesforceActions:
        description: Salesfoce Actions linked to this Derived Dimension.
        type: array
        items:
          type: object
  XmdDerivedDimensionMemberInputRepresentation:
    description: Wave XMD Derived Dimension Member input representation
    type: XmdBaseDimensionMemberInputRepresentation
    properties: {}
  XmdDerivedDimensionSalesforceActionInputRepresentation:
    description: Wave XMD Derived Dimension Salesforce Action input representation
    type: XmdBaseDimensionSalesforceActionInputRepresentation
    properties: {}
  XmdDerivedMeasureFormatInputRepresentation:
    description: Wave XMD Derived Measure Format input representation
    type: XmdBaseMeasureFormatInputRepresentation
    properties: {}
  XmdDerivedMeasureInputRepresentation:
    description: Wave XMD Derived Measure input representation
    type: XmdBaseMeasureInputRepresentation
    properties:
      format:
        description: Format details for the Derived Measure.
        type: object
  XmdDimensionBaseActionRepresentation:
    description: Base Action Representation for a Dimension in an Xmd.
    discriminator: name
    type: object
    properties:
      enabled:
        description: If Action is enabled for a specific dimension.
        type: boolean
      name:
        description: Name of the action.
        type: string
  XmdDimensionCustomActionInputRepresentation:
    description: Wave XMD Dimension Custom Action input representation
    type: XmdBaseDimensionCustomActionInputRepresentation
    properties: {}
  XmdDimensionCustomActionRepresentation:
    description: Custom Action Representation for a Dimension in an Xmd.
    type: XmdDimensionBaseActionRepresentation
    properties:
      icon:
        description: icon for the action.
        type: string
      method:
        description: method for the action.
        type: string
      target:
        description: target for the action.
        type: string
      tooltip:
        description: tooltip for the action.
        type: string
      url:
        description: Url for the action.
        type: string
  XmdDimensionInputRepresentation:
    description: Wave XMD Dimension input representation
    type: XmdBaseDimensionInputRepresentation
    properties:
      customActions:
        description: Custom Actions linked to this Dimension.
        type: array
        items:
          type: object
      members:
        description: Member overrides for a Dimension.
        type: array
        items:
          type: object
      salesforceActions:
        description: Salesfoce Actions linked to this Dimension.
        type: array
        items:
          type: object
  XmdDimensionMemberInputRepresentation:
    description: Wave XMD Dimension Member input representation
    type: XmdBaseDimensionMemberInputRepresentation
    properties: {}
  XmdDimensionMemberRepresentation:
    description: Extended metadata a Member linked to a Dimension in a Dataset.
    type: object
    properties:
      color:
        description: Color for the member.
        type: string
      label:
        description: Label for the member.
        type: string
      member:
        description: Member value.
        type: string
  XmdDimensionRepresentation:
    description: Extended metadata a Dimension in a Dataset.
    type: object
    properties:
      conditionalFormatting:
        description: Conditional formatting for a Dimension.
        type: object
        properties:
          //:
            type: ConditionalFormattingPropertyRepresentation
      customActions:
        description: Custom Actions linked to this Dimension.
        type: array
        items:
          type: XmdDimensionCustomActionRepresentation
      customActionsEnabled:
        description: Whether the Dimension has custom actions enabled.
        type: boolean
      dateFormat:
        description: Date format to be used for a Date that is a dimension.
        type: string
      defaultAction:
        description: Default action for the dimension.
        type: string
      description:
        description: Description of the Dimension.
        type: string
      field:
        description: Field name of the Dimension (used in queries).
        type: string
      fullyQualifiedName:
        description: Fully qualified name of the dimension.
        type: string
      imageTemplate:
        description: Image template.
        type: string
      isMultiValue:
        description: Whether the Dimension is multi-value.
        type: boolean
      label:
        description: Label for the Dimension.
        type: string
      linkTemplate:
        description: Template for formatting a Link.
        type: string
      linkTemplateEnabled:
        description: Whether the Dimension has link templates enabled.
        type: boolean
      linkTooltip:
        description: Tooltip to be displayed for links.
        type: string
      members:
        description: Member overrides for a Dimension.
        type: array
        items:
          type: XmdDimensionMemberRepresentation
      origin:
        description: Origin of this dimension.
        type: string
      recordDisplayFields:
        description: Ordered list of Dimensions and Measures. Represents the default
          order to show them in the UI.
        type: array
        items:
          type: string
      recordIdField:
        description: Record Id for this dimension.
        type: string
      recordOrganizationIdField:
        description: Record Organization Id for this dimension.
        type: string
      salesforceActions:
        description: Salesfoce Actions linked to this Dimension.
        type: array
        items:
          type: XmdDimensionSalesforceActionRepresentation
      salesforceActionsEnabled:
        description: Whether the Dimension has salesforce actions enabled.
        type: boolean
      showInExplorer:
        description: Whether the Dimension should be shown in the Explorer.
        type: boolean
  XmdDimensionSalesforceActionInputRepresentation:
    description: Wave XMD Dimension Salesforce Action input representation
    type: XmdBaseDimensionSalesforceActionInputRepresentation
    properties: {}
  XmdDimensionSalesforceActionRepresentation:
    description: Salesforce Action Representation for a Dimension in an Xmd.
    type: XmdDimensionBaseActionRepresentation
    properties: {}
  XmdInputRepresentation:
    description: Wave XMD input representation
    type: object
    properties:
      dataset:
        description: Locale specific information about the Dataset represented by
          this xmd.
        type: object
      dates:
        description: List of dates with formatting information.
        type: array
        items:
          type: object
      derivedDimensions:
        description: List of derived dimensions with formatting information.
        type: array
        items:
          type: object
      derivedMeasures:
        description: List of derived measures with formatting information.
        type: array
        items:
          type: object
      dimensions:
        description: List of dimensions with formatting information.
        type: array
        items:
          type: object
      measures:
        description: List of measures with formatting information.
        type: array
        items:
          type: object
      organizations:
        description: List of organizations for multi organization support.
        type: array
        items:
          type: object
      showDetailsDefaultFields:
        description: Ordered list of Dimensions and Measures. Represents the default
          order to show them in the UI.
        type: array
        items:
          type: string
  XmdMeasureFormatInputRepresentation:
    description: Wave XMD Measure Format input representation
    type: XmdBaseMeasureFormatInputRepresentation
    properties: {}
  XmdMeasureFormatRepresentation:
    description: Format for a Measure in a Dataset.
    type: object
    properties:
      customFormat:
        description: displays the original xmd 1.1 format array as a String.
        type: string
      decimalDigits:
        description: Number of digits to be displayed after the decimal place.
        type: integer
      delimiters:
        description: Thousands and decimal numeric separators.
        type: NumericSeparatorsRepresentation
      negativeParentheses:
        description: displays negative numbers with parenthesis or not minus sign
        type: boolean
      prefix:
        description: Prefix to be placed before the field value.
        type: string
      suffix:
        description: Suffix to be places after the field value.
        type: string
      unit:
        description: Unit string for the measure. (eg. 'cm')
        type: string
      unitMultiplier:
        description: Multiplier for the unit.
        format: double
        type: number
  XmdMeasureInputRepresentation:
    description: Wave XMD Measure input representation
    type: XmdBaseMeasureInputRepresentation
    properties:
      format:
        description: Format details for the Measure.
        type: object
  XmdMeasureRepresentation:
    description: Extended metadata for a Measure in a Dataset.
    type: object
    properties:
      conditionalFormatting:
        description: Conditional formatting for a Measure.
        type: object
        properties:
          //:
            type: ConditionalFormattingPropertyRepresentation
      dateFormat:
        description: Date format to be used for a Date that is a measure.
        type: string
      description:
        description: Description of the Measure.
        type: string
      field:
        description: Field name of the Measure (used in queries).
        type: string
      format:
        description: Format details for the Measure.
        type: XmdMeasureFormatRepresentation
      fullyQualifiedName:
        description: Fully qualified name of the Measure.
        type: string
      label:
        description: Label for the Measure.
        type: string
      origin:
        description: Origin of this measure.
        type: string
      showInExplorer:
        description: Whether the Measure should be shown in the Explorer.
        type: boolean
  XmdMetadataCollectionRepresentation:
    description: Extended Metadata (Xmd) Collection for a Dataset Version
    type: object
    properties:
      url:
        description: Location of this XMDs collection.
        type: string
      xmds:
        description: List of xmds.
        type: array
        items:
          type: XmdMetadataRepresentation
  XmdMetadataRepresentation:
    description: Extended Metadata (Xmd) Metadata for a Dataset Version
    type: object
    properties:
      type:
        description: The type of Xmd (Main, User, System)
        type: string
        enum:
          - Asset
          - Main
          - System
          - User
      url:
        description: Location where this XMD is stored.
        type: string
  XmdOrganizationInputRepresentation:
    description: Wave XMD Organization input representation
    type: object
    properties:
      id:
        description: ID of the organization.
        type: string
      instanceUrl:
        description: Instance Url for the organization.
        type: string
      label:
        description: Label for the organization.
        type: string
  XmdOrganizationRepresentation:
    description: Extended metadata for an organization
    type: object
    properties:
      id:
        description: id of the organization
        type: string
      instanceUrl:
        description: Instance Url for an organization.
        type: string
      label:
        description: Label for an organization.
        type: string
  XmdRepresentation:
    description: Extended Metadata (Xmd) for a Dataset Version
    type: object
    properties:
      createdBy:
        description: Represents the creator of this Xmd
        type: WaveUserRepresentation
      createdDate:
        description: Time the Xmd was created
        type: string
      dataset:
        description: Locale specific information about the Dataset represented by
          this xmd.
        type: XmdDatasetRepresentation
      dates:
        description: List of dates with formatting information.
        type: array
        items:
          type: XmdDateRepresentation
      derivedDimensions:
        description: List of derived dimensions with formatting information.
        type: array
        items:
          type: XmdDimensionRepresentation
      derivedMeasures:
        description: List of derived measures with formatting information.
        type: array
        items:
          type: XmdMeasureRepresentation
      dimensions:
        description: List of dimensions with formatting information.
        type: array
        items:
          type: XmdDimensionRepresentation
      errorMessage:
        description: Message if there was error copying forward the current version's
          user xmd to the newly created version.
        type: string
      language:
        description: The type of language this xmd is localized for
        type: string
        enum:
          - Bulgarian
          - ChineseSimplified
          - ChineseTraditional
          - Croatian
          - Czech
          - Danish
          - Dutch
          - English
          - EnglishUnitedKingdom
          - Finnish
          - French
          - German
          - Greek
          - Hungarian
          - Indonesian
          - Italian
          - Japanese
          - Korean
          - Norwegian
          - Polish
          - Portuguese
          - PortugueseBrazil
          - Romanian
          - Russian
          - Slovak
          - Slovenian
          - Spanish
          - SpanishMexico
          - Swedish
          - Thai
          - Turkish
          - Ukrainian
          - Vietnamese
      lastModifiedBy:
        description: Represents the user who last modified this Xmd
        type: WaveUserRepresentation
      lastModifiedDate:
        description: Time the Xmd was last modified
        type: string
      measures:
        description: List of measures with formatting information.
        type: array
        items:
          type: XmdMeasureRepresentation
      organizations:
        description: List of organizations for multi organization support.
        type: array
        items:
          type: XmdOrganizationRepresentation
      showDetailsDefaultFields:
        description: Ordered list of Dimensions and Measures. Represents the default
          order to show them in the UI.
        type: array
        items:
          type: string
      type:
        description: The type of Xmd (Main, User, System)
        type: string
        enum:
          - Asset
          - Main
          - System
          - User
      url:
        description: Location where this XMD is stored.
        type: string
/:
  /wave:
    get:
      description: Get a directory of Wave resources.
      responses:
        '200':
          description: Success
          body:
            application/json:
              type: DirectoryItemCollectionRepresentation
    /asset/{assetId}/schedule:
      delete:
        description: Delete schedule for an asset.
        responses:
          '200':
            description: Success
      put:
        description: Create a schedule for an asset.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: ScheduleRepresentation
        body:
          application/json:
            type: ScheduleInputRepresentation
            (oas-body-name): schedule
      uriParameters:
        assetId:
          type: string
          required: true
    /assets:
      /query:
        post:
          description: POST Analytics Assets Collection query
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: AnalyticsAssetCollectionRepresentation
          body:
            application/json:
              type: AnalyticsAssetCollectionQueryInputRepresentation
              (oas-body-name): assetCollection
      /{assetId}/xmds:
        /asset:
          get:
            description: Get an Asset only Xmd Resource representation
            responses:
              '200':
                description: Success
                body:
                  application/json:
                    type: XmdRepresentation
          uriParameters:
            assetId:
              type: string
              required: true
        /datasets/{datasetId}:
          get:
            description: Get an Xmd Resource representation
            responses:
              '200':
                description: Success
                body:
                  application/json:
                    type: XmdRepresentation
            queryParameters:
              merge:
                type: boolean
                required: false
          put:
            description: Replace the existing Asset Xmd.
            responses:
              '200':
                description: Success
                body:
                  application/json:
                    type: XmdRepresentation
            body:
              application/json:
                type: XmdInputRepresentation
                (oas-body-name): xmd
          uriParameters:
            assetId:
              type: string
              required: true
            datasetId:
              type: string
              required: true
    /authorize:
      post:
        description: Query access information of a set of users to a set of dataset
          versions.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: AuthorizeRepresentation
        body:
          application/json:
            type: AuthorizeInputRepresentation
            (oas-body-name): authorize
    /config:
      /features:
        get:
          description: Get the features available to a user
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: WaveFeaturesRepresentation
      /ui:
        get:
          description: Get the UI config data.
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: UiConfigRepresentation
    /dataConnectorTypes:
      get:
        description: A collection of Wave Data Connector Types.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: DataConnectorTypeCollectionRepresentation
    /dataConnectors:
      get:
        description: A collection of Wave Data Connectors.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: DataConnectorCollectionRepresentation
        queryParameters:
          category:
            type: string
            required: false
            enum:
              - AdvancedPropertiesSupport
              - BatchRead
              - Direct
              - FileBased
              - FilterSupport
              - MuleSoft
              - Output
          connectorType:
            type: string
            required: false
            enum:
              - ActCRM
              - ActOn
              - AdobeAnalytics
              - AmazonAthena
              - AmazonDynamoDB
              - AmazonS3
              - AmazonS3Output
              - AwsMarketplace
              - AwsRdsAuroraMySQL
              - AwsRdsAuroraPostgres
              - AwsRdsMariaDB
              - AwsRdsMySQL
              - AwsRdsOracle
              - AwsRdsPostgres
              - AwsRdsSqlServer
              - AzureCosmosDB
              - AzureSqlDatabase
              - AzureSqlDatawarehouse
              - AzureTable
              - Box
              - Cassandra
              - Dropbox
              - GoogleAds
              - GoogleAnalytics
              - GoogleBigQuery
              - GoogleBigQueryStandardSQL
              - GoogleCloudStorage
              - GoogleSheets
              - GoogleSpanner
              - HerokuPostgres
              - IbmCloudSqlQuery
              - LinkedIn
              - MarkLogic
              - Marketo
              - MicrosoftAdvertising
              - MicrosoftDynamics
              - MongoDB
              - MulesoftAnaplan
              - MulesoftConcur
              - MulesoftHubSpot
              - MulesoftMarkLogic
              - MulesoftMongoDB
              - MulesoftMySQL
              - MulesoftOracle
              - MulesoftServiceNow
              - MulesoftSqlServer
              - MulesoftSuccessFactors
              - MulesoftWorkday
              - MulesoftZuora
              - NetSuite
              - OracleEloqua
              - Redshift
              - SalesforceCPQ
              - SalesforceCommunityCloud
              - SalesforceEinsteinAnalytics
              - SalesforceExternal
              - SalesforceForceCom
              - SalesforceMarketingCloud
              - SalesforceMarketingCloudFull
              - SalesforceMarketingCloudOAuth2
              - SalesforceReport
              - SalesforceSalesCloud
              - SalesforceServiceCloud
              - SapConcur
              - SapHana
              - SapSuccessFactors
              - ServiceNow
              - SfdcLocal
              - SnowflakeComputing
              - SnowflakeDirect
              - SnowflakeOutput
              - SugarCRM
              - Teradata
              - VeevaVault
              - Xactly
              - Zendesk
              - ZohoCRM
              - ZuoraAQuA
          folderId:
            type: string
            required: false
          scope:
            type: string
            required: false
            enum:
              - CreatedByMe
              - Favorites
              - IncludeAllPrivate
              - Mru
              - SharedWithMe
      post:
        description: Add a Data Connector.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: DataConnectorRepresentation
        body:
          application/json:
            type: DataConnectorInputRepresentation
            (oas-body-name): dataConnector
    /dataConnectors/{connectorIdOrApiName}:
      delete:
        description: Delete a data connection.
        responses:
          '200':
            description: Success
      get:
        description: Get a single data connection.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: DataConnectorRepresentation
      patch:
        description: Patch a data connection resource.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: DataConnectorRepresentation
        body:
          application/json:
            type: DataConnectorInputRepresentation
            (oas-body-name): dataConnector
      uriParameters:
        connectorIdOrApiName:
          type: string
          required: true
      /ingest:
        post:
          description: Triggers a 'run now' for given connectionID
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: RestoreDatasetVersionRepresentation
        uriParameters:
          connectorIdOrApiName:
            type: string
            required: true
      /query:
        post:
          description: Execute a sql query on external data source
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: LiteralJsonRepresentation
          body:
            application/json:
              type: ExternalDataConnectorQueryInputRepresentation
              (oas-body-name): externalDataConnectorQuery
        uriParameters:
          connectorIdOrApiName:
            type: string
            required: true
      /sourceObjects:
        get:
          description: Get a list of all the Source Objects that the named Data Connector
            knows about.
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: SourceObjectCollectionRepresentation
          queryParameters:
            page:
              type: string
              required: false
            pageSize:
              type: integer
              required: false
        uriParameters:
          connectorIdOrApiName:
            type: string
            required: true
      /sourceObjects/{sourceObjectName}:
        get:
          description: Get a single Source Object by name.
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: SourceObjectRepresentation
        uriParameters:
          connectorIdOrApiName:
            type: string
            required: true
          sourceObjectName:
            type: string
            required: true
        /data:
          post:
            description: Get a single Source Object Data by name, list of fields,
              and advanced properties if applicable.
            responses:
              '200':
                description: Success
                body:
                  application/json:
                    type: SourceObjectDataRepresentation
            body:
              application/json:
                type: SourceObjectDataInputRepresentation
                (oas-body-name): sourceObjectParam
          uriParameters:
            connectorIdOrApiName:
              type: string
              required: true
            sourceObjectName:
              type: string
              required: true
        /dataPreview:
          post:
            description: Get a single Source Object Data by name, list of fields,
              and advanced properties if applicable.
            responses:
              '200':
                description: Success
                body:
                  application/json:
                    type: SourceObjectDataRepresentation
            body:
              application/json:
                type: SourceObjectDataInputRepresentation
                (oas-body-name): sourceObjectParam
          uriParameters:
            connectorIdOrApiName:
              type: string
              required: true
            sourceObjectName:
              type: string
              required: true
        /fields:
          get:
            description: Get a list of all the Source Fields of a particular Source
              Object.
            responses:
              '200':
                description: Success
                body:
                  application/json:
                    type: SourceFieldCollectionRepresentation
          uriParameters:
            connectorIdOrApiName:
              type: string
              required: true
            sourceObjectName:
              type: string
              required: true
      /status:
        get:
          description: Checks status of a connection
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: DataConnectorStatusRepresentation
        uriParameters:
          connectorIdOrApiName:
            type: string
            required: true
    /dataflowjobs:
      get:
        description: Get a collection  of all dataflow jobs representation
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: DataflowJobCollectionRepresentation
        queryParameters:
          dataflowId:
            type: string
            required: false
      post:
        description: Start a dataflow job.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: DataflowJobRepresentation
        body:
          application/json:
            type: DataflowJobInputRepresentation
            (oas-body-name): dataflowJob
    /dataflowjobs/{dataflowjobId}:
      get:
        description: Get a Dataflow Job resource representation.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: DataflowJobRepresentation
      patch:
        description: Updates, i.e., starts/stops, a Dataflow Job.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: DataflowJobRepresentation
        body:
          application/json:
            type: DataflowJobInputRepresentation
            (oas-body-name): dataflowJob
      uriParameters:
        dataflowjobId:
          type: string
          required: true
    /dataflowjobs/{dataflowjobId}/nodes:
      get:
        description: Get a Dataflow Job Node Collection resource representation.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: DataflowJobNodeCollectionRepresentation
      uriParameters:
        dataflowjobId:
          type: string
          required: true
    /dataflowjobs/{dataflowjobId}/nodes/{nodeId}:
      get:
        description: Get a Dataflow Job Node resource representation.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: DataflowJobNodeRepresentation
      uriParameters:
        dataflowjobId:
          type: string
          required: true
        nodeId:
          type: string
          required: true
    /dataflows:
      get:
        description: Get a collection of dataflow resource representations.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: DataflowCollectionRepresentation
        queryParameters:
          q:
            type: string
            required: false
      post:
        description: Create a new dataflow.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: DataflowRepresentation
        body:
          application/json:
            type: DataflowInputRepresentation
            (oas-body-name): dataflow
    /dataflows/{dataflowId}:
      get:
        description: Get a Dataflow resource representation.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: DataflowRepresentation
        queryParameters:
          historyId:
            type: string
            required: false
      patch:
        description: Patch a Dataflow resource.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: DataflowRepresentation
        body:
          application/json:
            type: DataflowInputRepresentation
            (oas-body-name): dataflow
      put:
        description: Revert a dataflow to a previous historical version.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: DataflowRepresentation
        body:
          application/json:
            type: AssetRevertHistoryInputRepresentation
            (oas-body-name): history
      uriParameters:
        dataflowId:
          type: string
          required: true
    /dataflows/{dataflowId}/histories:
      get:
        description: Get all available dataflow histories.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: AssetHistoryCollectionRepresentation
      uriParameters:
        dataflowId:
          type: string
          required: true
    /dataflows/{dataflowId}/histories/{historyId}:
      delete:
        description: Delete a specific Dataflow history resource.
        responses:
          '200':
            description: Success
      get:
        description: Get a specific Dataflow history resource representation.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: AssetHistoryDetailRepresentation
      patch:
        description: Patch a dataflow history label.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: AssetHistoryDetailRepresentation
        body:
          application/json:
            type: AssetHistoryInputRepresentation
            (oas-body-name): dataflowHistory
      uriParameters:
        dataflowId:
          type: string
          required: true
        historyId:
          type: string
          required: true
    /datasets:
      get:
        description: Get a collection of dataset resource representations.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: DatasetCollectionRepresentation
        queryParameters:
          datasetTypes:
            type: array
            required: false
            items:
              type: string
              enum:
                - Default
                - Live
                - Trended
              (oas-collectionFormat): csv
          folderId:
            type: string
            required: false
          hasCurrentOnly:
            type: boolean
            required: false
          order:
            type: string
            required: false
            enum:
              - Ascending
              - Descending
          page:
            type: string
            required: false
          pageSize:
            type: integer
            required: false
          q:
            type: string
            required: false
          scope:
            type: string
            required: false
            enum:
              - CreatedByMe
              - Favorites
              - IncludeAllPrivate
              - Mru
              - SharedWithMe
          sort:
            type: string
            required: false
            enum:
              - CreatedBy
              - CreatedDate
              - LastModified
              - LastQueried
              - LastRefreshed
              - Mru
              - Name
              - TotalRows
      post:
        description: Create a dataset.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: DatasetRepresentation
        body:
          application/json:
            type: DatasetInputRepresentation
            (oas-body-name): dataset
    /datasets/{datasetIdOrApiName}:
      delete:
        description: Delete a dataset resource.
        responses:
          '200':
            description: Success
      get:
        description: Get a dataset resource representation.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: DatasetRepresentation
      patch:
        description: Patch a dataset resource.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: DatasetRepresentation
        body:
          application/json:
            type: DatasetInputRepresentation
            (oas-body-name): dataset
      uriParameters:
        datasetIdOrApiName:
          type: string
          required: true
      /shards:
        get:
          description: Get a collection of dataset shard resource representations.
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: DatasetShardCollectionRepresentation
        post:
          description: Create a new Dataset Shard.
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: DatasetShardRepresentation
          queryParameters:
            format:
              type: string
              required: false
              enum:
                - Csv
            maxSizeKB:
              type: integer
              required: false
        uriParameters:
          datasetIdOrApiName:
            type: string
            required: true
      /shards/{shardId}:
        get:
          description: Get a Dataset Shard Resource representation
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: DatasetShardRepresentation
        uriParameters:
          datasetIdOrApiName:
            type: string
            required: true
          shardId:
            type: string
            required: true
      /shards/{shardId}/files:
        get:
          description: Get file collection for a Dataset Shard.
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: WaveDatasetVersionFileMetadataCollectionRepresentation
          queryParameters:
            page:
              type: string
              required: false
            pageSize:
              type: integer
              required: false
        uriParameters:
          datasetIdOrApiName:
            type: string
            required: true
          shardId:
            type: string
            required: true
      /shards/{shardId}/files/{fileId}:
        get:
          description: Returns a binary stream of the contents of the specified file.
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: StreamedRepresentation
        uriParameters:
          datasetIdOrApiName:
            type: string
            required: true
          fileId:
            type: string
            required: true
          shardId:
            type: string
            required: true
      /versions:
        get:
          description: Get the dataset versions for a particular dataset.
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: DatasetVersionCollectionRepresentation
        post:
          description: Post a dataset version as the current version.
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: RestoreDatasetVersionRepresentation
          body:
            application/json:
              type: RestoreDatasetVersionInputRepresentation
              (oas-body-name): sourceVersion
        uriParameters:
          datasetIdOrApiName:
            type: string
            required: true
      /versions/{versionId}:
        get:
          description: Get a dataset version resource representation.
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: DatasetVersionRepresentation
        patch:
          description: Patch a dataset version resource representation.
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: DatasetVersionRepresentation
          body:
            application/json:
              type: DatasetVersionInputRepresentation
              (oas-body-name): datasetVersion
        uriParameters:
          datasetIdOrApiName:
            type: string
            required: true
          versionId:
            type: string
            required: true
        /files/{fileId}:
          get:
            description: Returns a binary stream of the contents of the specified
              file.
            responses:
              '200':
                description: Success
                body:
                  application/json:
                    type: StreamedRepresentation
          uriParameters:
            datasetIdOrApiName:
              type: string
              required: true
            fileId:
              type: string
              required: true
            versionId:
              type: string
              required: true
        /xmds:
          get:
            description: Get the Xmds Collection Resource representation
            responses:
              '200':
                description: Success
                body:
                  application/json:
                    type: XmdMetadataCollectionRepresentation
          uriParameters:
            datasetIdOrApiName:
              type: string
              required: true
            versionId:
              type: string
              required: true
        /xmds/{xmdType}:
          get:
            description: Get the extended metadata of the given type for the given
              dataset version.
            responses:
              '200':
                description: Success
                body:
                  application/json:
                    type: XmdRepresentation
          put:
            description: Replace the existing extended metadata.
            responses:
              '200':
                description: Success
                body:
                  application/json:
                    type: XmdRepresentation
            body:
              application/json:
                type: XmdInputRepresentation
                (oas-body-name): xmd
          uriParameters:
            datasetIdOrApiName:
              type: string
              required: true
            versionId:
              type: string
              required: true
            xmdType:
              type: string
              required: true
              enum:
                - Asset
                - Main
                - System
                - User
    /dependencies/{assetId}:
      get:
        description: Get a Dependencies resource representation.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: DependencyRepresentation
      uriParameters:
        assetId:
          type: string
          required: true
    /encryption/keys:
      get:
        description: Query encryption keys for Wave.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: WaveEncryptionKeyCollectionRepresentation
        queryParameters:
          ids:
            type: array
            required: false
            items:
              type: string
              (oas-collectionFormat): csv
    /encryption/keys/active:
      get:
        description: Query active encryption key for Wave.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: WaveEncryptionKeyRepresentation
    /folders:
      get:
        description: Get a collection of Wave analytics folders.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: WaveFolderCollectionRepresentation
        queryParameters:
          isPinned:
            type: boolean
            required: false
          mobileOnlyFeaturedAssets:
            type: boolean
            required: false
          page:
            type: string
            required: false
          pageSize:
            type: integer
            required: false
          q:
            type: string
            required: false
          scope:
            type: string
            required: false
            enum:
              - CreatedByMe
              - Favorites
              - IncludeAllPrivate
              - Mru
              - SharedWithMe
          sort:
            type: string
            required: false
            enum:
              - LastModified
              - LastModifiedBy
              - Mru
              - Name
          templateSourceId:
            type: string
            required: false
      post:
        description: Creates a new Wave application to contain Wave analytics assets.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: WaveFolderRepresentation
        body:
          application/json:
            type: BaseWaveFolderInputRepresentation
            (oas-body-name): waveFolder
    /folders/{folderId}:
      delete:
        description: Delete an Application folder resource representation.
        responses:
          '200':
            description: Success
      get:
        description: Get an Application folder resource representation.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: WaveFolderRepresentation
        queryParameters:
          mobileOnlyFeaturedAssets:
            type: boolean
            required: false
      patch:
        description: Patch an Application folder resource.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: WaveFolderRepresentation
        body:
          application/json:
            type: BaseWaveFolderInputRepresentation
            (oas-body-name): folder
      put:
        description: Replace an Application folder resource.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: WaveFolderRepresentation
        body:
          application/json:
            type: BaseWaveFolderInputRepresentation
            (oas-body-name): folder
      uriParameters:
        folderId:
          type: string
          required: true
    /folders/{folderId}/diff:
      post:
        description: Creates a diff for a wave folder before and after upgrade.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: WaveFolderDiffRepresentation
        body:
          application/json:
            type: BaseWaveFolderInputRepresentation
            (oas-body-name): waveFolder
      uriParameters:
        folderId:
          type: string
          required: true
    /folders/{folderId}/diff/files:
      post:
        description: Creates a zip file with diffs for a wave folder for upgrade or
          reset preview.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: StreamedRepresentation
        body:
          application/json:
            type: BaseWaveFolderInputRepresentation
            (oas-body-name): waveFolder
      uriParameters:
        folderId:
          type: string
          required: true
    /orgStatistics:
      get:
        description: Get analytics org usage statistics.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: OrgStatisticsRepresentation
    /recipe-previews:
      post:
        description: Create a recipe preview on the interactive server.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: RecipePreviewRepresentation
        body:
          application/json:
            type: RecipePreviewInputRepresentation
            (oas-body-name): recipePreview
    /recipe-previews/{previewId}:
      delete:
        description: Deletes a recipe preview from the interactive server.
        responses:
          '200':
            description: Success
      get:
        description: Retrieve a recipe preview from the interactive server.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: RecipePreviewRepresentation
        queryParameters:
          page:
            type: integer
            required: false
          pageSize:
            type: integer
            required: false
      uriParameters:
        previewId:
          type: string
          required: true
      /metadata:
        get:
          description: Retrieve recipe preview metadata from the interactive server.
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: RecipePreviewMetadataRepresentation
        uriParameters:
          previewId:
            type: string
            required: true
      /statistics:
        get:
          description: Retrieve statistics for a given recipe preview from the interactive
            server.
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: RecipePreviewStatisticsRepresentation
        uriParameters:
          previewId:
            type: string
            required: true
      /statistics/{columnApiName}:
        get:
          description: Retrieve extended statistics for a single column of a given
            recipe preview from the interactive server.
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: RecipePreviewExtendedStatisticsRepresentation
        uriParameters:
          columnApiName:
            type: string
            required: true
          previewId:
            type: string
            required: true
    /recipe-session:
      delete:
        description: Release a user session on the interactive server.
        responses:
          '200':
            description: Success
      put:
        description: Create or renew a user session on the interactive server.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: RecipeSessionRepresentation
    /recipes:
      get:
        description: Get a listing of all recipes.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: RecipeCollectionRepresentation
        queryParameters:
          format:
            type: string
            required: false
            enum:
              - R2
              - R3
          page:
            type: string
            required: false
          pageSize:
            type: integer
            required: false
          q:
            type: string
            required: false
          sort:
            type: string
            required: false
            enum:
              - LastModified
              - LastModifiedBy
              - Mru
              - Name
      post:
        description: Create a new recipe.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: RecipeRepresentation
        body:
          application/json:
            type: RecipeInputRepresentation
            (oas-body-name): recipeObject
    /recipes/{id}:
      delete:
        description: Delete a recipe by ID.
        responses:
          '200':
            description: Success
      get:
        description: Get a recipe by ID.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: RecipeRepresentation
        queryParameters:
          format:
            type: string
            required: false
            enum:
              - R2
              - R3
          historyId:
            type: string
            required: false
      patch:
        description: Update a recipe by ID.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: RecipeRepresentation
        body:
          application/json:
            type: RecipeInputRepresentation
            (oas-body-name): recipeObject
      uriParameters:
        id:
          type: string
          required: true
      /file:
        get:
          description: Get a recipe's file by ID.
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: StreamedRepresentation
        uriParameters:
          id:
            type: string
            required: true
      /histories:
        get:
          description: Get all available recipe histories.
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: AssetHistoryCollectionRepresentation
        uriParameters:
          id:
            type: string
            required: true
      /histories/{historyId}:
        delete:
          description: Delete a specific Recipe history resource.
          responses:
            '200':
              description: Success
        get:
          description: Get a specific Recipe history resource representation.
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: AssetHistoryDetailRepresentation
        patch:
          description: Patch a recipe history label.
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: AssetHistoryDetailRepresentation
          body:
            application/json:
              type: AssetHistoryInputRepresentation
              (oas-body-name): recipeHistory
        uriParameters:
          historyId:
            type: string
            required: true
          id:
            type: string
            required: true
      /notification:
        get:
          description: Retrieve notification condition on a recipe for the current
            user.
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: RecipeNotificationRepresentation
        put:
          description: Create or update notification condition on a recipe for the
            current user.
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: RecipeNotificationRepresentation
          body:
            application/json:
              type: RecipeNotificationInputRepresentation
              (oas-body-name): recipeNotification
        uriParameters:
          id:
            type: string
            required: true
    /replicatedDatasets:
      get:
        description: Get a list of all Replicated Datasets.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: ReplicatedDatasetCollectionRepresentation
        queryParameters:
          category:
            type: string
            required: false
            enum:
              - Input
              - Output
          connector:
            type: string
            required: false
          sourceObject:
            type: string
            required: false
      post:
        description: Add a Source Object to be replicated.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: ReplicatedDatasetRepresentation
        body:
          application/json:
            type: ReplicatedDatasetInputRepresentation
            (oas-body-name): replicatedDataset
    /replicatedDatasets/{id}:
      delete:
        description: Delete a Replicated Dataset by ID.
        responses:
          '200':
            description: Success
      get:
        description: Get a single Replicated Dataset by ID.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: ReplicatedDatasetRepresentation
      patch:
        description: Update a replicated dataset by ID
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: ReplicatedDatasetRepresentation
        body:
          application/json:
            type: ReplicatedDatasetInputRepresentation
            (oas-body-name): replicatedDataset
      uriParameters:
        id:
          type: string
          required: true
    /replicatedDatasets/{id}/fields:
      get:
        description: Get a list of a Replicated Dataset's fields.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: ReplicatedFieldCollectionRepresentation
      patch:
        description: Merge (upsert) the target Replicated Dataset's fields with those
          provided input body. Each field requires at least a name if it's existing,
          and fieldType if it's new. This method cannot be used to delete fields,
          but they can be skipped, which removes them from active replication.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: ReplicatedFieldCollectionRepresentation
        body:
          application/json:
            type: ReplicatedFieldCollectionInputRepresentation
            (oas-body-name): replicatedFields
      uriParameters:
        id:
          type: string
          required: true
    /security/coverage:
      /datasets:
        get:
          description: Get wave sharing inheritance dataset coverage
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: DatasetCoverageSummaryRepresentation
      /datasets/{datasetIdOrApiName}/versions/{versionId}:
        get:
          description: The security coverage for a particular dataset version.
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: DatasetCoverageRepresentation
        uriParameters:
          datasetIdOrApiName:
            type: string
            required: true
          versionId:
            type: string
            required: true
      /jobs/{jobId}:
        get:
          description: The coverage job details.
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: CoverageJobRepresentation
        uriParameters:
          jobId:
            type: string
            required: true
      /objects:
        get:
          description: Get the list of objects eligible for Sharing Inheritance
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: CoveredObjectCollectionRepresentation
      /objects/{objectApiName}:
        get:
          description: The security coverage for a particular object.
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: ObjectCoverageRepresentation
        uriParameters:
          objectApiName:
            type: string
            required: true
      /objects/{objectApiName}/users:
        get:
          description: Get the Sharing Inheritance User Coverage for the specified
            object
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: UserCoverageRepresentation
        post:
          description: Calculate Sharing Inheritance user coverage
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: CoverageJobRepresentation
        uriParameters:
          objectApiName:
            type: string
            required: true
      /objects/{objectApiName}/users/{userId}:
        get:
          description: Get the Sharing Inheritance User Coverage for the given user
            for the specified object
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: SingularUserCoverageRepresentation
        uriParameters:
          objectApiName:
            type: string
            required: true
          userId:
            type: string
            required: true
    /subscriptions:
      get:
        description: Get all available subscriptions.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: SubscriptionCollectionRepresentation
      post:
        description: Create a subscription schedule.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: SubscriptionRepresentation
        queryParameters:
          runNow:
            type: boolean
            required: false
        body:
          application/json:
            type: SubscriptionInputRepresentation
            (oas-body-name): schedule
    /subscriptions/{subscriptionId}:
      delete:
        description: Delete a subscription resource.
        responses:
          '200':
            description: Success
      get:
        description: Get a subscription resource representation.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: SubscriptionRepresentation
      patch:
        description: Patch a subscription resource.
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: SubscriptionRepresentation
        queryParameters:
          runNow:
            type: boolean
            required: false
        body:
          application/json:
            type: SubscriptionInputRepresentation
            (oas-body-name): subscription
      uriParameters:
        subscriptionId:
          type: string
          required: true
