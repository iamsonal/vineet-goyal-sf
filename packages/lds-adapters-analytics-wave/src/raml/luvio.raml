#%RAML 1.0 Overlay
extends: ./api.raml

uses:
  luvio: luvio://annotations.raml

(luvio.keyPrefix): 'WAVE::'

types:
  BaseWaveAssetRepresentation:
    (luvio.key):
      id: id
  SaqlQueryResultsRepresentation:
    (luvio.opaque): true
  ScheduleRepresentation:
    (luvio.key):
      id: assetId
  ReplicatedFieldCollectionRepresentation:
    (luvio.key):
      id: replicatedDataset.id

/wave:
  /asset/{assetId}/schedule:
    get:
      (luvio.adapter):
        name: getSchedule
      (luvio.key):
        id: urlParams.assetId
    put:
      (luvio.adapter):
        name: updateSchedule
  /dataConnectors:
    get:
      (luvio.adapter):
        name: getDataConnectors
    post:
      (luvio.adapter):
        name: createDataConnector
  /dataConnectors/{connectorIdOrApiName}:
    get:
      (luvio.adapter):
        name: getDataConnector
      (luvio.key):
        id: urlParams.connectorIdOrApiName
    patch:
      (luvio.adapter):
        name: updateDataConnector
  /dataConnectorTypes:
    get:
      (luvio.adapter):
        name: getDataConnectorTypes
  /dataflowjobs:
    get:
      (luvio.adapter):
        name: getDataflowJobs
    post:
      (luvio.adapter):
        name: createDataflowJob
  /dataflowjobs/{dataflowjobId}:
    get:
      (luvio.adapter):
        name: getDataflowJob
      (luvio.key):
        id: urlParams.dataflowjobId
    patch:
      (luvio.adapter):
        name: updateDataflowJob
  /dataflowjobs/{dataflowjobId}/nodes:
    get:
      (luvio.adapter):
        name: getDataflowJobNodes
  /dataflowjobs/{dataflowjobId}/nodes/{nodeId}:
    get:
      (luvio.adapter):
        name: getDataflowJobNode
      (luvio.key):
        id: urlParams.nodeId
  /datasets:
    get:
      (luvio.adapter):
        name: getDatasets
  /datasets/{datasetIdOrApiName}:
    delete:
      (luvio.adapter):
        name: deleteDataset
      (luvio.key):
        id: urlParams.datasetIdOrApiName
    get:
      (luvio.adapter):
        name: getDataset
      (luvio.key):
        id: urlParams.datasetIdOrApiName
  /datasets/{datasetIdOrApiName}/versions/{versionId}/xmds/{xmdType}:
    get:
      (luvio.adapter):
        name: getXmd
  /folders:
    get:
      (luvio.adapter):
        name: getWaveFolders
  /limits:
    get:
      (luvio.adapter):
        name: getAnalyticsLimits
  /query:
    post:
      (luvio.adapter):
        name: executeQuery
      (luvio.method): get
  /recipes:
    get:
      (luvio.adapter):
        name: getRecipes
  /recipes/{id}:
    get:
      (luvio.adapter):
        name: getRecipe
      (luvio.key):
        id: urlParams.id
    delete:
      (luvio.adapter):
        name: deleteRecipe
      (luvio.key):
        id: urlParams.id
  /replicatedDatasets:
    get:
      (luvio.adapter):
        name: getReplicatedDatasets
    post:
      (luvio.adapter):
        name: createReplicatedDataset
  /replicatedDatasets/{id}:
    get:
      (luvio.adapter):
        name: getReplicatedDataset
      (luvio.key):
        id: urlParams.id
    delete:
      (luvio.adapter):
        name: deleteReplicatedDataset
      (luvio.key):
        id: urlParams.id
    patch:
      (luvio.adapter):
        name: updateReplicatedDataset
  /replicatedDatasets/{id}/fields:
    get:
      (luvio.adapter):
        name: getReplicatedFields
      (luvio.key):
        id: urlParams.id
    patch:
      (luvio.adapter):
        name: updateReplicatedFields
